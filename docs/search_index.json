[["index.html", "The Changing Shape of Empire: A GM Study of Chimú Bottles in Museum Collections Preface 0.1 Basis of inquiry 0.2 Primary findings 0.3 Acknowledgments 0.4 Funding 0.5 Data management 0.6 Colophon", " The Changing Shape of Empire: A GM Study of Chimú Bottles in Museum Collections R. Alan Covey, Robert Z. Selden Jr., Nicole Payntar, and Astrid Runggaldier 2022-02-05 Preface Reproducibilitythe ability to recompute resultsand replicabilitythe chances other experimenters will achieve a consistent resultare two foundational characteristics of successful scientific research (Leek and Peng 2015). 0.1 Basis of inquiry After centuries of looting along Perus North Coast, archaeologists acknowledge that the pottery of the Chimú Empire is one of the most collected Andean artifacts, but also one of the most poorly understood. Much of the enduring classificatory uncertainty comes from the problematic provenance of most Chimú vessels, and the fact that the distinctive blackware identified as Chimú represents the production of workshops from across an extensive area, during periods of regional political decentralization (c. 900-1200 CE), imperial growth (c. 1200-1450), and foreign conquest by the Inca (c. 1450-1535) and Spanish (after 1532) empires. This chapter builds on previous seriations and field observations, using geometric morphometric analysis of a sample of 3D-scanned Chimú bottles from publicly held collections at the University of Texas (Austin) and the American Museum of Natural History. Since Chimú bottles were formed in workshops using molds, variations in vessel shape can serve as indicators of variable practices. We compare a sample of typical Chimú blackware bottles with a sample of Inca-Chimú vessels that carry features typical of the short Inca occupation of the North Coast. Differences between the two samples offer new lines of evidence that can guide more precise classifications of these vessels, as well as new interpretations of the imperial history of Perus North Coast. 0.2 Primary findings 0.2.1 Linear metrics Bottles and jars differ significantly in orifice diameter Bottles and jars differ significantly in belly diameter Bottles and jars differ significantly in rim thickness Figure 0.1: Boxplots for vessel form by a, orifice diameter; b, base diameter; c, neck diameter; d, belly diameter; e, height; and f, rim thickness. 0.2.2 3D Geometric morphometrics Whole vessel morphology: Bottles and jars differ significantly in shape Bottles and jars do not differ in size # pca warp neck knitr::include_graphics(&#39;images/pca-warp-botjar.jpg&#39;) (#fig:pca.warp.botjar.index)Results of PCA summarising shape variation in bottles, gray; and jars, orange; with shapes + warp grids for maxima/minima of each axis. knitr::include_graphics(&#39;images/mshape.png&#39;) Figure 0.2: Mean shapes for bottles (a), jars (c), and comparison of bottle (gray) and jar (black) shape (b). Neck morphology: Bottle and jar necks differ significantly in shape Bottle and jar necks do not differ in size # pca warp neck knitr::include_graphics(&#39;images/pca-warp-neck.jpg&#39;) (#fig:pca.warp.ne.index)Results of PCA summarising shape variation in bottle necks, gray; and jar necks, orange; with shapes + warp grids for maxima/minima of each axis. knitr::include_graphics(&#39;images/mshape-neck.png&#39;) Figure 0.3: Mean shapes for bottle necks (a), jar necks (b), and comparison of bottle (gray) and jar (black) neck shapes (c). Basal morphology: Bottle and jar bases differ significantly in shape Bottle and jar bases do not differ in size # pca warp knitr::include_graphics(&#39;images/pca-warp-base.jpg&#39;) (#fig:pca.warp.ba.index)Results of PCA summarising shape variation in bottle bases, gray; and jar bases, orange; with shapes + warp grids for maxima/minima of each axis. knitr::include_graphics(&#39;images/mshape-base.png&#39;) (#fig:botjarbase.index)Mean shapes for bottle bases (a), jar bases (b), and comparison of bottle (gray) and jar (black) base shapes (c). 0.3 Acknowledgments We extend our gratitude to 0.4 Funding Components of this analytical work flow were developed and funded by a Preservation Technology and Training grant (P14AP00138) to RZS from the National Center for Preservation Technology and Training (NCPTT), and additional grants to RZS from the Caddo Tribe of Oklahoma and the National Forests and Grasslands in Texas (15-PA-11081300-033 and 20-PA-11081300-074). Funding to scan the Chimú vessels in the Art and Art History Collections at The University of Texas at Austin was provided by The University of Texas at Austin. 0.5 Data management This volume is written in Markdown, and all files needed to reproduce it are included in the GitHub repository, which is digitally curated on the Open Science Framework. The reproducible nature of this undertaking provides a means for others to critically assess and evaluate the various analytical components (Gray and Marwick 2019; Peng 2011; Gandrud 2014), which is a necessary requirement for the production of reliable knowledge. Reproducibility projects in psychology and cancer biology are impacting current research practices across all domains. Examples of reproducible research are becoming more abundant in archaeology (Marwick 2016; Ivanovait et al. 2020; Selden Jr., Dockall, and Dubied 2020), and the next generation of archaeologists are learning those tools and methods needed to reproduce and/or replicate research results (Marwick et al. 2019). Reproducible and replicable research work flows are often employed at the highest levels of humanities-based inquiries to mitigate concern or doubt regarding proper execution, and is of particular import should the results haveexplicitly or implicitlya major impact on scientific progress (Peels and Bouter 2018). The data and analysis code associated with this project can be accessed through this document or the GitHub repository, and is digitally curated on the Open Science Framework (DOI 10.17605/OSF.IO/VZHJR). 0.6 Colophon This version of the analysis was generated on 2022-02-05 06:50:27 using the following computational environment and dependencies: # what R packages and versions were used? if (&quot;devtools&quot; %in% installed.packages()) devtools::session_info() ## - Session info ------------------------------------------------------------------------------------- ## setting value ## version R version 4.1.2 (2021-11-01) ## os Windows 10 x64 (build 19043) ## system x86_64, mingw32 ## ui RStudio ## language (EN) ## collate English_United States.1252 ## ctype English_United States.1252 ## tz America/Chicago ## date 2022-02-05 ## rstudio 2021.09.0+351 Ghost Orchid (desktop) ## pandoc 2.14.0.3 @ C:/Program Files/RStudio/bin/pandoc/ (via rmarkdown) ## ## - Packages ----------------------------------------------------------------------------------------- ## package * version date (UTC) lib source ## abind 1.4-5 2016-07-21 [1] CRAN (R 4.1.0) ## ape 5.6-1 2022-01-07 [1] CRAN (R 4.1.2) ## assertthat 0.2.1 2019-03-21 [1] CRAN (R 4.1.0) ## backports 1.4.1 2021-12-13 [1] CRAN (R 4.1.2) ## bookdown 0.24 2021-09-02 [1] CRAN (R 4.1.1) ## brio 1.1.3 2021-11-30 [1] CRAN (R 4.1.2) ## broom 0.7.12 2022-01-28 [1] CRAN (R 4.1.2) ## bslib 0.3.1 2021-10-06 [1] CRAN (R 4.1.1) ## cachem 1.0.6 2021-08-19 [1] CRAN (R 4.1.1) ## callr 3.7.0 2021-04-20 [1] CRAN (R 4.1.0) ## car 3.0-12 2021-11-06 [1] CRAN (R 4.1.1) ## carData 3.0-5 2022-01-06 [1] CRAN (R 4.1.2) ## cellranger 1.1.0 2016-07-27 [1] CRAN (R 4.1.0) ## cli 3.1.1 2022-01-20 [1] CRAN (R 4.1.2) ## cluster * 2.1.2 2021-04-17 [2] CRAN (R 4.1.2) ## colorspace 2.0-2 2021-06-24 [1] CRAN (R 4.1.0) ## cowplot 1.1.1 2020-12-30 [1] CRAN (R 4.1.0) ## crayon 1.4.2 2021-10-29 [1] CRAN (R 4.1.1) ## data.table 1.14.2 2021-09-27 [1] CRAN (R 4.1.1) ## DBI 1.1.2 2021-12-20 [1] CRAN (R 4.1.2) ## dbplyr 2.1.1 2021-04-06 [1] CRAN (R 4.1.0) ## desc 1.4.0 2021-09-28 [1] CRAN (R 4.1.1) ## devtools 2.4.3 2021-11-30 [1] CRAN (R 4.1.2) ## digest 0.6.29 2021-12-01 [1] CRAN (R 4.1.2) ## dplyr * 1.0.7 2021-06-18 [1] CRAN (R 4.1.0) ## dtplyr 1.2.1 2022-01-19 [1] CRAN (R 4.1.2) ## ellipsis 0.3.2 2021-04-29 [1] CRAN (R 4.1.0) ## evaluate 0.14 2019-05-28 [1] CRAN (R 4.1.0) ## fansi 1.0.2 2022-01-14 [1] CRAN (R 4.1.2) ## farver 2.1.0 2021-02-28 [1] CRAN (R 4.1.0) ## fastmap 1.1.0 2021-01-25 [1] CRAN (R 4.1.0) ## forcats * 0.5.1 2021-01-27 [1] CRAN (R 4.1.0) ## fs 1.5.2 2021-12-08 [1] CRAN (R 4.1.2) ## gargle 1.2.0 2021-07-02 [1] CRAN (R 4.1.0) ## generics 0.1.2 2022-01-31 [1] CRAN (R 4.1.2) ## geomorph * 4.0.1 2021-12-20 [1] Github (geomorphR/geomorph@9816609) ## ggExtra * 0.9 2019-08-27 [1] CRAN (R 4.1.0) ## ggfortify * 0.4.14 2022-01-05 [1] Github (sinhrks/ggfortify@619d40e) ## ggplot2 * 3.3.5 2021-06-25 [1] CRAN (R 4.1.0) ## ggpubr * 0.4.0.999 2022-01-05 [1] Github (kassambara/ggpubr@ac5a01f) ## ggsignif 0.6.3 2021-09-09 [1] CRAN (R 4.1.1) ## git2r 0.29.0 2021-11-22 [1] CRAN (R 4.1.2) ## glue 1.6.1 2022-01-22 [1] CRAN (R 4.1.2) ## googledrive 2.0.0 2021-07-08 [1] CRAN (R 4.1.0) ## googlesheets4 1.0.0 2021-07-21 [1] CRAN (R 4.1.0) ## gridExtra 2.3 2017-09-09 [1] CRAN (R 4.1.0) ## gtable 0.3.0 2019-03-25 [1] CRAN (R 4.1.0) ## haven 2.4.3 2021-08-04 [1] CRAN (R 4.1.0) ## here * 1.0.1.9000 2021-11-08 [1] Github (r-lib/here@b66d1ab) ## highr 0.9 2021-04-16 [1] CRAN (R 4.1.0) ## hms 1.1.1 2021-09-26 [1] CRAN (R 4.1.1) ## htmltools 0.5.2 2021-08-25 [1] CRAN (R 4.1.1) ## htmlwidgets 1.5.4 2021-09-08 [1] CRAN (R 4.1.1) ## httpuv 1.6.5 2022-01-05 [1] CRAN (R 4.1.2) ## httr 1.4.2 2020-07-20 [1] CRAN (R 4.1.0) ## jpeg 0.1-9 2021-07-24 [1] CRAN (R 4.1.0) ## jquerylib 0.1.4 2021-04-26 [1] CRAN (R 4.1.0) ## jsonlite 1.7.3 2022-01-17 [1] CRAN (R 4.1.2) ## knitr 1.37 2021-12-16 [1] CRAN (R 4.1.2) ## labeling 0.4.2 2020-10-20 [1] CRAN (R 4.1.0) ## later 1.3.0 2021-08-18 [1] CRAN (R 4.1.1) ## lattice 0.20-45 2021-09-22 [2] CRAN (R 4.1.2) ## lifecycle 1.0.1 2021-09-24 [1] CRAN (R 4.1.1) ## lubridate 1.8.0 2021-10-07 [1] CRAN (R 4.1.1) ## magrittr 2.0.2 2022-01-26 [1] CRAN (R 4.1.2) ## MASS 7.3-54 2021-05-03 [2] CRAN (R 4.1.2) ## Matrix * 1.3-4 2021-06-01 [2] CRAN (R 4.1.2) ## memoise 2.0.1 2021-11-26 [1] CRAN (R 4.1.2) ## mime 0.12 2021-09-28 [1] CRAN (R 4.1.1) ## miniUI 0.1.1.1 2018-05-18 [1] CRAN (R 4.1.0) ## modelr 0.1.8 2020-05-19 [1] CRAN (R 4.1.0) ## munsell 0.5.0 2018-06-12 [1] CRAN (R 4.1.0) ## nlme 3.1-153 2021-09-07 [2] CRAN (R 4.1.2) ## pillar 1.7.0 2022-02-01 [1] CRAN (R 4.1.2) ## pkgbuild 1.3.1 2021-12-20 [1] CRAN (R 4.1.2) ## pkgconfig 2.0.3 2019-09-22 [1] CRAN (R 4.1.0) ## pkgload 1.2.4 2021-11-30 [1] CRAN (R 4.1.2) ## prettyunits 1.1.1 2020-01-24 [1] CRAN (R 4.1.0) ## processx 3.5.2 2021-04-30 [1] CRAN (R 4.1.0) ## promises 1.2.0.1 2021-02-11 [1] CRAN (R 4.1.0) ## ps 1.6.0 2021-02-28 [1] CRAN (R 4.1.0) ## purrr * 0.3.4 2020-04-17 [1] CRAN (R 4.1.0) ## R6 2.5.1 2021-08-19 [1] CRAN (R 4.1.1) ## Rcpp 1.0.8 2022-01-13 [1] CRAN (R 4.1.2) ## readr * 2.1.2 2022-01-30 [1] CRAN (R 4.1.2) ## readxl 1.3.1 2019-03-13 [1] CRAN (R 4.1.0) ## remotes 2.4.2 2021-11-30 [1] CRAN (R 4.1.2) ## reprex 2.0.1 2021-08-05 [1] CRAN (R 4.1.0) ## rgl * 0.108.3 2021-11-21 [1] CRAN (R 4.1.2) ## rlang 0.4.12 2021-10-18 [1] CRAN (R 4.1.1) ## rmarkdown 2.11 2021-09-14 [1] CRAN (R 4.1.1) ## rprojroot 2.0.2 2020-11-15 [1] CRAN (R 4.1.0) ## RRPP * 1.1.2 2021-11-02 [1] Github (mlcollyer/RRPP@96cab18) ## rstatix 0.7.0 2021-02-13 [1] CRAN (R 4.1.0) ## rstudioapi 0.13 2020-11-12 [1] CRAN (R 4.1.0) ## rvest 1.0.2 2021-10-16 [1] CRAN (R 4.1.1) ## sass 0.4.0 2021-05-12 [1] CRAN (R 4.1.0) ## scales 1.1.1 2020-05-11 [1] CRAN (R 4.1.0) ## sessioninfo 1.2.2 2021-12-06 [1] CRAN (R 4.1.2) ## shiny 1.7.1 2021-10-02 [1] CRAN (R 4.1.1) ## stringi 1.7.6 2021-11-29 [1] CRAN (R 4.1.1) ## stringr * 1.4.0 2019-02-10 [1] CRAN (R 4.1.0) ## testthat 3.1.2 2022-01-20 [1] CRAN (R 4.1.2) ## tibble * 3.1.6 2021-11-07 [1] CRAN (R 4.1.1) ## tidyr * 1.2.0 2022-02-01 [1] CRAN (R 4.1.2) ## tidyselect 1.1.1 2021-04-30 [1] CRAN (R 4.1.0) ## tidyverse * 1.3.1.9000 2022-01-05 [1] Github (tidyverse/tidyverse@6186fbf) ## tzdb 0.2.0 2021-10-27 [1] CRAN (R 4.1.1) ## usethis 2.1.5 2021-12-09 [1] CRAN (R 4.1.2) ## utf8 1.2.2 2021-07-24 [1] CRAN (R 4.1.0) ## vctrs 0.3.8 2021-04-29 [1] CRAN (R 4.1.0) ## wesanderson * 0.3.6.9000 2021-11-08 [1] Github (karthik/wesanderson@651c944) ## withr 2.4.3 2021-11-30 [1] CRAN (R 4.1.2) ## xfun 0.29 2021-12-14 [1] CRAN (R 4.1.2) ## xml2 1.3.3 2021-11-30 [1] CRAN (R 4.1.2) ## xtable 1.8-4 2019-04-21 [1] CRAN (R 4.1.0) ## yaml 2.2.2 2022-01-25 [1] CRAN (R 4.1.2) ## ## [1] C:/Users/seldenjrz/Documents/R/win-library/4.1 ## [2] C:/Program Files/R/R-4.1.2/library ## ## ---------------------------------------------------------------------------------------------------- Current Git commit details are: # where can I find this commit? if (&quot;git2r&quot; %in% installed.packages() &amp; git2r::in_repository(path = &quot;.&quot;)) git2r::repository(here::here()) ## Local: main E:/github/peru.bottle.jar ## Remote: main @ origin (https://github.com/seldenlab/peru.bottle.jar) ## Head: [cddf772] 2022-02-04: &lt;edit index&gt; References "],["linear-chimú-vessel-metrics.html", "Chapter 1 Linear Chimú vessel metrics 1.1 Load DATA + define variables 1.2 Boxplots for variable by group 1.3 Principal Components Analysis for group 1.4 Analyses of Variance (ANOVA) for variable ~ group", " Chapter 1 Linear Chimú vessel metrics # install required analysis packages #devtools::install_github(&quot;tidyverse/tidyverse&quot;) #devtools::install_github(&quot;mlcollyer/RRPP&quot;) #devtools::install_github(&quot;kassambara/ggpubr&quot;) #devtools::install_github(&#39;sinhrks/ggfortify&#39;) # load libraries library(here) library(tidyverse) library(RRPP) library(ggpubr) library(ggfortify) library(cluster) library(wesanderson) library(ggExtra) 1.1 Load DATA + define variables DATA &lt;- read.csv(&quot;potmeas.csv&quot;, header = TRUE, as.is = TRUE) # define variables od &lt;- DATA$od &lt;- DATA$orifice.diameter # orifice diameter bd &lt;- DATA$bd &lt;- DATA$base.diameter # base diameter nd &lt;- DATA$nd &lt;- DATA$bneck.diameter # neck diameter bl &lt;- DATA$bl &lt;- DATA$wide.diameter # belly diameter h &lt;- DATA$h &lt;- DATA$height # height RT &lt;- DATA$RT &lt;- DATA$rim.thickness # rim thickness gp &lt;- DATA$gp &lt;- as.factor(DATA$form) # bottle or jar 1.2 Boxplots for variable by group # boxplot of orifice diameter ~ group odgroup &lt;- ggplot(DATA, aes(x = gp, y = od, color = gp)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;,stackdir = &#39;center&#39;,dotsize = 0.3) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + labs(x = &quot;Form&quot;, y = &quot;Orifice Diam&quot;) + theme(legend.position = &quot;none&quot;) # boxplot of base diameter ~ group bdgroup &lt;- ggplot(DATA, aes(x = gp, y = bd, color = gp)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;,stackdir = &#39;center&#39;,dotsize = 0.3) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + labs(x = &quot;Form&quot;, y = &quot;Base Diam&quot;) + theme(legend.position = &quot;none&quot;) # boxplot of neck diameter ~ group ndgroup &lt;- ggplot(DATA, aes(x = gp, y = nd, color = gp)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;,stackdir = &#39;center&#39;,dotsize = 0.3) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + labs(x = &quot;Form&quot;, y = &quot;Neck Diam&quot;) + theme(legend.position = &quot;none&quot;) # boxplot of belly diameter ~ group blgroup &lt;- ggplot(DATA, aes(x = gp, y = bl, color = gp)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;,stackdir = &#39;center&#39;,dotsize = 0.3) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + labs(x = &quot;Form&quot;, y = &quot;Belly Diam&quot;) + theme(legend.position = &quot;none&quot;) # boxplot of height ~ group hgroup &lt;- ggplot(DATA, aes(x = gp, y = h, color = gp)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;,stackdir = &#39;center&#39;,dotsize = 0.3) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + labs(x = &quot;Form&quot;, y = &quot;Height&quot;) + theme(legend.position = &quot;none&quot;) # boxplot of rim thickness ~ group rtgroup &lt;- ggplot(DATA, aes(x = gp, y = RT, color = gp)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;,stackdir = &#39;center&#39;,dotsize = 0.3) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + labs(x = &quot;Form&quot;, y = &quot;Rim Thick&quot;) + theme(legend.position = &quot;none&quot;) # render figure sitefigure&lt;-ggarrange(odgroup, bdgroup, ndgroup, blgroup, hgroup, rtgroup, labels = c(&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;,&quot;e&quot;,&quot;f&quot;), ncol = 3, nrow = 2) ## Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`. ## Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`. ## Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`. ## Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`. ## Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`. ## Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`. sitefigure Figure 1.1: Boxplots of orifice diameter, base diameter, neck diameter, belly diameter, height, and rim thickness for the anthropomorphic, phytomorphic, and zoomorphic Chimú vessels used in this study. 1.3 Principal Components Analysis for group # set plot parameters to plot by group df &lt;- DATA[c(3:8)] pch.gps &lt;- c(15,17)[as.factor(gp)] col.gps &lt;- wes_palette(&quot;Moonrise2&quot;)[as.factor(gp)] ## pca plot pca &lt;- autoplot(prcomp(df), data = DATA, asp = 1, shape = pch.gps, colour = &quot;form&quot;, variance_percentage = TRUE, loadings = TRUE, loadings.colour = &#39;blue&#39;, loadings.label = TRUE, loadings.label.size = 3, frame = TRUE, frame.type = &#39;t&#39;) + scale_fill_manual(values = wes_palette(&quot;Moonrise2&quot;)) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) ggMarginal(pca, groupColour = TRUE) Figure 1.2: Results of Principal Components Analysis for linear metrics associated with the Chimu vessels used in this study (gray squares, anthropomorphic; orange triangles, phytomorphic; tan circles, zoomorphic). 1.4 Analyses of Variance (ANOVA) for variable ~ group 1.4.1 ANOVA Orifice diameter ~ group # anova = orifice diameter ~ group gp.od &lt;- lm.rrpp(od ~ gp, SS.type = &quot;I&quot;, DATA = DATA, iter = 9999, print.progress = FALSE) anova(gp.od) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## gp 1 26.339 26.3392 0.16886 7.7205 2.1794 0.0091 ** ## Residuals 38 129.640 3.4116 0.83114 ## Total 39 155.979 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: lm.rrpp(f1 = od ~ gp, iter = 9999, SS.type = &quot;I&quot;, print.progress = FALSE, DATA = DATA) 1.4.2 ANOVA Base diameter of Chimú vessels # anova = base diameter ~ group gp.bd &lt;- lm.rrpp(bd ~ gp, SS.type = &quot;I&quot;, DATA = DATA, iter = 9999, print.progress = FALSE) anova(gp.bd) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## gp 1 0.548 0.54837 0.01103 0.4239 0.0019808 0.5089 ## Residuals 38 49.163 1.29375 0.98897 ## Total 39 49.711 ## ## Call: lm.rrpp(f1 = bd ~ gp, iter = 9999, SS.type = &quot;I&quot;, print.progress = FALSE, DATA = DATA) 1.4.3 ANOVA Neck diameter of Chimú vessels # anova = neck diameter ~ group gp.nd &lt;- lm.rrpp(nd ~ gp, SS.type = &quot;I&quot;, DATA = DATA, iter = 9999, print.progress = FALSE) anova(gp.nd) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## gp 1 0.315 0.31485 0.00784 0.3002 -0.1968 0.5862 ## Residuals 38 39.860 1.04895 0.99216 ## Total 39 40.175 ## ## Call: lm.rrpp(f1 = nd ~ gp, iter = 9999, SS.type = &quot;I&quot;, print.progress = FALSE, DATA = DATA) 1.4.4 ANOVA Belly diameter of Chimú vessels # anova = belly diameter ~ group gp.bl &lt;- lm.rrpp(bl ~ gp, SS.type = &quot;I&quot;, DATA = DATA, iter = 9999, print.progress = FALSE) anova(gp.bl) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## gp 1 66.64 66.638 0.1406 6.2167 1.9955 0.0138 * ## Residuals 38 407.33 10.719 0.8594 ## Total 39 473.97 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: lm.rrpp(f1 = bl ~ gp, iter = 9999, SS.type = &quot;I&quot;, print.progress = FALSE, DATA = DATA) 1.4.5 ANOVA Height of Chimú vessels # anova = height ~ group gp.h &lt;- lm.rrpp(h ~ gp, SS.type = &quot;I&quot;, DATA = DATA, iter = 9999, print.progress = FALSE) anova(gp.h) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## gp 1 3.44 3.4391 0.00618 0.2361 -0.32432 0.6322 ## Residuals 38 553.45 14.5644 0.99382 ## Total 39 556.89 ## ## Call: lm.rrpp(f1 = h ~ gp, iter = 9999, SS.type = &quot;I&quot;, print.progress = FALSE, DATA = DATA) 1.4.6 ANOVA Rim Thickness of Chimú vessels # anova = rim thickness ~ group gp.rt &lt;- lm.rrpp(RT ~ gp, SS.type = &quot;I&quot;, DATA = DATA, iter = 9999, print.progress = FALSE) anova(gp.rt) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## gp 1 0.26804 0.268045 0.2144 10.371 2.6006 0.00135 ** ## Residuals 38 0.98215 0.025846 0.7856 ## Total 39 1.25019 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: lm.rrpp(f1 = RT ~ gp, iter = 9999, SS.type = &quot;I&quot;, print.progress = FALSE, DATA = DATA) "],["landmarking-protocol.html", "Chapter 2 Landmarking protocol", " Chapter 2 Landmarking protocol "],["bottle-vs-jar-morphology.html", "Chapter 3 Bottle vs Jar morphology 3.1 Load packages + data 3.2 Generalised Procrustes Analysis 3.3 Principal Components Analysis 3.4 Vessel size and shape 3.5 Morphological disparity 3.6 Mean shapes", " Chapter 3 Bottle vs Jar morphology 3.1 Load packages + data # load packages #devtools::install_github(&quot;mlcollyer/RRPP&quot;) #devtools::install_github(&quot;geomorphR/geomorph&quot;, ref = &quot;Stable&quot;, build_vignettes = TRUE) library(here) library(geomorph) library(tidyverse) library(wesanderson) # read GM data source(&#39;readmulti.csv.R&#39;) setwd(&quot;./data&quot;) filelist &lt;- list.files(pattern = &quot;.csv&quot;) coords &lt;- readmulti.csv(filelist) setwd(&quot;../&quot;) # read qualitative data qdata &lt;- read.csv(&quot;qdata.csv&quot;, header = TRUE, row.names = 1) qdata &lt;- qdata[match(dimnames(coords)[[3]], rownames(qdata)),] 3.2 Generalised Procrustes Analysis Landmark data were aligned to a global coordinate system (Kendall 1981, 1984; Slice 2001), achieved through generalised Procrustes superimposition (Rohlf and Slice 1990) performed in R 4.0.3 (R Core Development Team, 2020) using the geomorph library v. 3.3.2 (Adams et al. 2017; Adams and Otárola-Castillo 2013). Procrustes superimposition translates, scales, and rotates the coordinate data to allow for comparisons among objects (Gower 1975; Rohlf and Slice 1990). The geomorph package uses a partial Procrustes superimposition that projects the aligned specimens into tangent space subsequent to alignment in preparation for the use of multivariate methods that assume linear space (Rohlf 1999; Slice 2001). # gpa Y.gpa &lt;- gpagen(coords, PrinAxes = TRUE, ProcD = TRUE, Proj = TRUE, print.progress = FALSE) # geomorph data frame gdf &lt;- geomorph.data.frame(shape = Y.gpa$coords, size = Y.gpa$Csize, type = qdata$type) # render 3d gpa plot #plot(Y.gpa) # gpa plot #knitr::include_graphics(&#39;images/gpa3d.png&#39;) # add centroid size to qdata qdata$csz &lt;- Y.gpa$Csize # print updated qdata with centroid size knitr::kable(qdata, align = &quot;lccccc&quot;, caption = &quot;Modified attributes included in qdata.&quot;) Table 3.1: Modified attributes included in qdata. group type csz 1608101 phytomorph bottle 480.3691 1608102 phytomorph bottle 642.7924 1608111 anthropomorph jar 585.9878 1608121 phytomorph jar 673.7326 1608122 zoomorph bottle 578.2339 1608124 zoomorph bottle 543.0810 1608125 zoomorph bottle 538.4608 1608126 zoomorph jar 613.1277 1608129 zoomorph jar 511.8743 1608131 zoomorph jar 681.0963 1608140 zoomorph bottle 558.2951 1608141 anthropomorph bottle 511.1698 1608163 zoomorph jar 432.3418 160836 phytomorph bottle 509.1797 160839 zoomorph jar 416.4591 160844 anthropomorph jar 607.4952 160846 zoomorph bottle 545.1291 160847 anthropomorph bottle 416.4516 160848 anthropomorph jar 468.6945 160849 anthropomorph bottle 453.0625 160850 anthropomorph bottle 751.5635 160852 zoomorph bottle 512.1550 160852x anthropomorph jar 596.2446 160859 zoomorph bottle 512.3332 160860 anthropomorph jar 449.6768 160868 zoomorph bottle 674.0455 160873 anthropomorph jar 590.1911 160875 anthropomorph bottle 687.1416 160876 anthropomorph bottle 591.4190 160881 anthropomorph jar 416.0126 160882 zoomorph bottle 544.4697 160884 zoomorph jar 418.5339 160886 zoomorph bottle 441.5053 160888 anthropomorph bottle 379.4152 160892 anthropomorph jar 384.3096 205854 anthropomorph bottle 407.5996 206614 zoomorph jar 458.8122 238944 phytomorph bottle 701.0724 PEX35 zoomorph bottle 635.8740 3.2.1 Boxplot # attributes for boxplot csz &lt;- qdata$csz group &lt;- qdata$group type &lt;- qdata$type # boxplot of vessel centroid size by type csz.type &lt;- ggplot(qdata, aes(x = type, y = csz, color = type)) + geom_boxplot(notch = FALSE) + geom_dotplot(binaxis = &#39;y&#39;, stackdir = &#39;center&#39;, dotsize = 0.3) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + theme(legend.position = &quot;none&quot;) + labs(x = &#39;Group&#39;, y = &#39;Centroid Size&#39;) # render plot csz.type ## Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`. Figure 3.1: Boxplot of centroid size by spatial/temporal unit. 3.3 Principal Components Analysis Principal components analysis (Jolliffe 2002) was used to visualise shape variation among the bottles. The shape changes described by each principal axis are commonly visualised using thin-plate spline warping of a reference 3D mesh (Klingenberg 2013; Sherratt et al. 2014). # principal components analysis pca&lt;-gm.prcomp(Y.gpa$coords) summary(pca) ## ## Ordination type: Principal Component Analysis ## Centering by OLS mean ## Orthogonal projection of OLS residuals ## Number of observations: 39 ## Number of vectors 38 ## ## Importance of Components: ## Comp1 Comp2 Comp3 Comp4 Comp5 Comp6 ## Eigenvalues 0.004485678 0.00355943 0.001311864 0.0007823485 0.0003097816 0.0002256185 ## Proportion of Variance 0.406257479 0.32236931 0.118812527 0.0708554894 0.0280562002 0.0204337408 ## Cumulative Proportion 0.406257479 0.72862679 0.847439320 0.9182948099 0.9463510100 0.9667847509 ## Comp7 Comp8 Comp9 Comp10 Comp11 Comp12 ## Eigenvalues 8.118173e-05 6.638848e-05 4.706338e-05 3.716778e-05 3.008759e-05 2.036059e-05 ## Proportion of Variance 7.352442e-03 6.012651e-03 4.262421e-03 3.366200e-03 2.724964e-03 1.844011e-03 ## Cumulative Proportion 9.741372e-01 9.801498e-01 9.844123e-01 9.877785e-01 9.905034e-01 9.923474e-01 ## Comp13 Comp14 Comp15 Comp16 Comp17 Comp18 ## Eigenvalues 0.0000186112 1.408432e-05 9.551946e-06 8.672174e-06 5.912122e-06 4.837964e-06 ## Proportion of Variance 0.0016855733 1.275584e-03 8.650976e-04 7.854188e-04 5.354472e-04 4.381632e-04 ## Cumulative Proportion 0.9940330135 9.953086e-01 9.961737e-01 9.969591e-01 9.974946e-01 9.979327e-01 ## Comp19 Comp20 Comp21 Comp22 Comp23 Comp24 ## Eigenvalues 4.597733e-06 3.331368e-06 2.538962e-06 2.282581e-06 1.870651e-06 1.447943e-06 ## Proportion of Variance 4.164060e-04 3.017143e-04 2.299479e-04 2.067281e-04 1.694205e-04 1.311368e-04 ## Cumulative Proportion 9.983491e-01 9.986508e-01 9.988808e-01 9.990875e-01 9.992569e-01 9.993881e-01 ## Comp25 Comp26 Comp27 Comp28 Comp29 Comp30 ## Eigenvalues 1.205523e-06 1.143831e-06 8.552530e-07 7.657932e-07 5.817632e-07 5.406710e-07 ## Proportion of Variance 1.091814e-04 1.035942e-04 7.745829e-05 6.935612e-05 5.268894e-05 4.896732e-05 ## Cumulative Proportion 9.994973e-01 9.996009e-01 9.996783e-01 9.997477e-01 9.998004e-01 9.998493e-01 ## Comp31 Comp32 Comp33 Comp34 Comp35 Comp36 ## Eigenvalues 4.100172e-07 3.589511e-07 3.052523e-07 2.062271e-07 1.804861e-07 1.320782e-07 ## Proportion of Variance 3.713431e-05 3.250937e-05 2.764599e-05 1.867752e-05 1.634620e-05 1.196202e-05 ## Cumulative Proportion 9.998865e-01 9.999190e-01 9.999466e-01 9.999653e-01 9.999816e-01 9.999936e-01 ## Comp37 Comp38 ## Eigenvalues 6.797149e-08 2.696693e-09 ## Proportion of Variance 6.156020e-06 2.442333e-07 ## Cumulative Proportion 9.999998e-01 1.000000e+00 # set plot parameters (types) pch.gps.type &lt;- c(15,17)[as.factor(type)] col.gps.type &lt;- wes_palette(&quot;Moonrise2&quot;)[as.factor(type)] col.hull.type &lt;- c(&quot;#798E87&quot;,&quot;#C27D38&quot;) # plot pca by comb pc.plot.type &lt;- plot(pca, asp = 1, pch = pch.gps.type, col = col.gps.type) shapeHulls(pc.plot.type, groups = type, group.cols = col.hull.type) 3.3.1 Minima/maxima of PC1/2 with warp grids # plot x/y maxima/minima ## x - minima ref &lt;- mean.shape &lt;- mshape(Y.gpa$coords) plotRefToTarget(M1 = ref, M2 = pca$shapes$shapes.comp1$min, method = &quot;TPS&quot;) plotRefToTarget(M1 = ref, M2 = pca$shapes$shapes.comp1$max, method = &quot;TPS&quot;) plotRefToTarget(M1 = ref, M2 = pca$shapes$shapes.comp2$min, method = &quot;TPS&quot;) plotRefToTarget(M1 = ref, M2 = pca$shapes$shapes.comp2$max, method = &quot;TPS&quot;) # pca warp knitr::include_graphics(&#39;images/pca-warp-botjar.jpg&#39;) (#fig:pca.warp.botjar)Results of PCA summarising shape variation in bottles, gray; and jars, orange; with shapes + warp grids for maxima/minima of each axis. 3.4 Vessel size and shape A residual randomisation permutation procedure (RRPP; n = 10,000 permutations) was used for all Procrustes ANOVAs (Adams and Collyer 2015; Michael L. Collyer and Adams 2018), which has higher statistical power and a greater ability to identify patterns in the data should they be present (Anderson and Ter Braak 2003). To assess whether shape changes differ by group (geography and time), Procrustes ANOVAs (Goodall 1991) were also run that enlist effect-sizes (zscores) computed as standard deviates of the generated sampling distributions (M. L. Collyer, Sekora, and Adams 2015). # size as a function of vessel form (bottle/jar)? fit.size.type &lt;- procD.lm(size ~ type, data = gdf, print.progress = FALSE, iter = 9999) # Procrustes ANOVA: do sizes differ as a function of vessel form? anova(fit.size.type) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## type 1 8175 8174.6 0.02185 0.8265 0.38392 0.3671 ## Residuals 37 365954 9890.6 0.97815 ## Total 38 374128 ## ## Call: procD.lm(f1 = size ~ type, iter = 9999, data = gdf, print.progress = FALSE) # shape as a function of vessel form? fit.shape.type &lt;- procD.lm(shape ~ type, data = gdf, print.progress = FALSE, iter = 9999) # Procrustes ANOVA: do shapes differ as a function of vessel form? anova(fit.shape.type) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## type 1 0.03535 0.035351 0.08426 3.4043 2.1661 0.0135 * ## Residuals 37 0.38422 0.010384 0.91574 ## Total 38 0.41958 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: procD.lm(f1 = shape ~ type, iter = 9999, data = gdf, print.progress = FALSE) 3.5 Morphological disparity # morphological disparity: do either of the groups display greater # size variation among individuals relative to the other group? morphol.disparity(fit.size.type, groups = qdata$type, data = gdf, print.progress = FALSE, iter = 9999) ## ## Call: ## morphol.disparity(f1 = fit.size.type, groups = qdata$type, iter = 9999, ## data = gdf, print.progress = FALSE) ## ## ## ## Randomized Residual Permutation Procedure Used ## 10000 Permutations ## ## Procrustes variances for defined groups ## bottle jar ## 9375.973 9394.149 ## ## ## Pairwise absolute differences between variances ## bottle jar ## bottle 0.0000 18.1761 ## jar 18.1761 0.0000 ## ## ## P-Values ## bottle jar ## bottle 1.0000 0.9949 ## jar 0.9949 1.0000 # morphological disparity: do either of the groups display greater #shape variation among individuals relative to the other group? morphol.disparity(fit.shape.type, groups = qdata$type, data = gdf, print.progress = FALSE, iter = 9999) ## ## Call: ## morphol.disparity(f1 = fit.shape.type, groups = qdata$type, iter = 9999, ## data = gdf, print.progress = FALSE) ## ## ## ## Randomized Residual Permutation Procedure Used ## 10000 Permutations ## ## Procrustes variances for defined groups ## bottle jar ## 0.01168155 0.00722178 ## ## ## Pairwise absolute differences between variances ## bottle jar ## bottle 0.000000000 0.004459774 ## jar 0.004459774 0.000000000 ## ## ## P-Values ## bottle jar ## bottle 1.0000 0.3953 ## jar 0.3953 1.0000 3.6 Mean shapes # subset landmark coordinates to produce mean shapes new.coords&lt;-coords.subset(A = Y.gpa$coords, group = qdata$type) names(new.coords) ## [1] &quot;bottle&quot; &quot;jar&quot; # group shape means mean &lt;- lapply(new.coords, mshape) # plot mean shapes (type) plot(mean$bottle) plot(mean$jar) # comparison plots plotRefToTarget(mean$bottle, mean$jar, method = c(&quot;points&quot;), mag = 1) knitr::include_graphics(&#39;images/mshape.png&#39;) References "],["dgm-neck-morphology.html", "Chapter 4 3DGM: Neck morphology 4.1 Load packages + data 4.2 Generalised Procrustes Analysis 4.3 Principal Components Analysis 4.4 Neck size and shape 4.5 Mean shapes", " Chapter 4 3DGM: Neck morphology 4.1 Load packages + data # load packages library(here) library(geomorph) library(tidyverse) library(wesanderson) # read GM data source(&#39;readmulti.csv.R&#39;) setwd(&quot;./data&quot;) filelist &lt;- list.files(pattern = &quot;.csv&quot;) coords &lt;- readmulti.csv(filelist) setwd(&quot;../&quot;) # read qualitative data qdata &lt;- read.csv(&quot;qdata.csv&quot;, header = TRUE, row.names = 1) qdata &lt;- qdata[match(dimnames(coords)[[3]], rownames(qdata)),] 4.2 Generalised Procrustes Analysis Landmark data were aligned to a global coordinate system (Kendall 1981, 1984; Slice 2001), achieved through generalised Procrustes superimposition (Rohlf and Slice 1990) performed in R 4.0.3 (R Core Development Team, 2020) using the geomorph library v. 3.3.2 (Adams et al. 2017; Adams and Otárola-Castillo 2013). Procrustes superimposition translates, scales, and rotates the coordinate data to allow for comparisons among objects (Gower 1975; Rohlf and Slice 1990). The geomorph package uses a partial Procrustes superimposition that projects the aligned specimens into tangent space subsequent to alignment in preparation for the use of multivariate methods that assume linear space (Rohlf 1999; Slice 2001). #select landmarks associated with neck a &lt;- c(1:10, 36:45) # new coords neck neck.coords &lt;- coords[a,,] # gpa Y.gpa &lt;- gpagen(neck.coords, PrinAxes = TRUE, ProcD = TRUE, Proj = TRUE, print.progress = FALSE) # geomorph data frame gdf &lt;- geomorph.data.frame(shape = Y.gpa$coords, size = Y.gpa$Csize, type = qdata$type) # render 3d gpa plot plot(Y.gpa) # gpa plot #knitr::include_graphics(&#39;images/gpa3d.png&#39;) # add centroid size to qdata qdata$csz &lt;- Y.gpa$Csize # print updated qdata with centroid size knitr::kable(qdata, align = &quot;lccccc&quot;, caption = &quot;Modified attributes included in qdata.&quot;) (#tab:gpa.s)Modified attributes included in qdata. group type csz 1608101 phytomorph bottle 107.10572 1608102 phytomorph bottle 142.36178 1608111 anthropomorph jar 163.31036 1608121 phytomorph jar 181.52349 1608122 zoomorph bottle 133.40276 1608124 zoomorph bottle 170.20152 1608125 zoomorph bottle 161.49520 1608126 zoomorph jar 160.22397 1608129 zoomorph jar 134.17259 1608131 zoomorph jar 147.23022 1608140 zoomorph bottle 158.47286 1608141 anthropomorph bottle 75.82197 1608163 zoomorph jar 132.89618 160836 phytomorph bottle 122.71861 160839 zoomorph jar 100.78076 160844 anthropomorph jar 128.53257 160846 zoomorph bottle 138.06314 160847 anthropomorph bottle 124.64438 160848 anthropomorph jar 104.14149 160849 anthropomorph bottle 109.77716 160850 anthropomorph bottle 188.78343 160852 zoomorph bottle 99.79087 160852x anthropomorph jar 139.51302 160859 zoomorph bottle 99.75380 160860 anthropomorph jar 122.83193 160868 zoomorph bottle 175.12810 160873 anthropomorph jar 148.06531 160875 anthropomorph bottle 161.47143 160876 anthropomorph bottle 135.73671 160881 anthropomorph jar 110.56869 160882 zoomorph bottle 143.17329 160884 zoomorph jar 109.99526 160886 zoomorph bottle 109.89164 160888 anthropomorph bottle 119.59953 160892 anthropomorph jar 125.74480 205854 anthropomorph bottle 167.50520 206614 zoomorph jar 118.74759 238944 phytomorph bottle 106.80074 PEX35 zoomorph bottle 174.61464 4.2.1 Boxplot # attributes for boxplot csz &lt;- qdata$csz type &lt;- qdata$type # palette pal &lt;- wes_palette(&quot;Moonrise2&quot;) # boxplot of vessel centroid size by type csz.type &lt;- ggplot(qdata, aes(x = type, y = csz, color = type)) + geom_boxplot(notch = FALSE) + geom_dotplot(binaxis = &#39;y&#39;, stackdir = &#39;center&#39;, dotsize = 0.3) + scale_colour_manual(values = pal) + theme(legend.position = &quot;none&quot;) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + labs(x = &#39;Type (Neck)&#39;, y = &#39;Centroid Size&#39;) # render plot csz.type ## Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`. (#fig:box1.s)Boxplot of centroid size by spatial/temporal unit. 4.3 Principal Components Analysis Principal components analysis (Jolliffe 2002) was used to visualise shape variation among bottle and jar necks. The shape changes described by each principal axis are commonly visualised using thin-plate spline warping of a reference 3D mesh (Klingenberg 2013; Sherratt et al. 2014). # principal components analysis pca&lt;-gm.prcomp(Y.gpa$coords) summary(pca) ## ## Ordination type: Principal Component Analysis ## Centering by OLS mean ## Orthogonal projection of OLS residuals ## Number of observations: 39 ## Number of vectors 36 ## ## Importance of Components: ## Comp1 Comp2 Comp3 Comp4 Comp5 Comp6 ## Eigenvalues 0.03652055 0.004064251 0.00108168 0.000638151 0.0003001449 0.0002048617 ## Proportion of Variance 0.84587966 0.094135151 0.02505360 0.014780690 0.0069518808 0.0047449540 ## Cumulative Proportion 0.84587966 0.940014813 0.96506842 0.979849107 0.9868009882 0.9915459422 ## Comp7 Comp8 Comp9 Comp10 Comp11 Comp12 ## Eigenvalues 0.0001070729 7.173945e-05 0.0000594558 4.209115e-05 1.948601e-05 1.598621e-05 ## Proportion of Variance 0.0024799941 1.661611e-03 0.0013771000 9.749044e-04 4.513300e-04 3.702685e-04 ## Cumulative Proportion 0.9940259363 9.956875e-01 0.9970646472 9.980396e-01 9.984909e-01 9.988612e-01 ## Comp13 Comp14 Comp15 Comp16 Comp17 Comp18 ## Eigenvalues 0.0000127950 9.847063e-06 7.186125e-06 6.069951e-06 3.753207e-06 3.409925e-06 ## Proportion of Variance 0.0002963546 2.280752e-04 1.664432e-04 1.405907e-04 8.693082e-05 7.897980e-05 ## Cumulative Proportion 0.9991575048 9.993856e-01 9.995520e-01 9.996926e-01 9.997795e-01 9.998585e-01 ## Comp19 Comp20 Comp21 Comp22 Comp23 Comp24 ## Eigenvalues 1.825607e-06 1.346814e-06 7.792248e-07 6.478865e-07 5.140475e-07 4.433879e-07 ## Proportion of Variance 4.228425e-05 3.119456e-05 1.804821e-05 1.500618e-05 1.190624e-05 1.026964e-05 ## Cumulative Proportion 9.999008e-01 9.999320e-01 9.999501e-01 9.999651e-01 9.999770e-01 9.999872e-01 ## Comp25 Comp26 Comp27 Comp28 Comp29 Comp30 ## Eigenvalues 1.661079e-07 1.140399e-07 8.823252e-08 6.689052e-08 4.468332e-08 2.821632e-08 ## Proportion of Variance 3.847348e-06 2.641362e-06 2.043619e-06 1.549301e-06 1.034944e-06 6.535391e-07 ## Cumulative Proportion 9.999911e-01 9.999937e-01 9.999958e-01 9.999973e-01 9.999984e-01 9.999990e-01 ## Comp31 Comp32 Comp33 Comp34 Comp35 Comp36 ## Eigenvalues 1.994837e-08 1.246152e-08 7.163238e-09 2.099495e-09 8.060368e-10 5.410782e-10 ## Proportion of Variance 4.620390e-07 2.886305e-07 1.659131e-07 4.862797e-08 1.866922e-08 1.253232e-08 ## Cumulative Proportion 9.999995e-01 9.999998e-01 9.999999e-01 1.000000e+00 1.000000e+00 1.000000e+00 # set plot parameters (types) pch.gps.type &lt;- c(15,17)[as.factor(type)] col.gps.type &lt;- wes_palette(&quot;Moonrise2&quot;)[as.factor(type)] col.hull.type &lt;- c(&quot;#798E87&quot;,&quot;#C27D38&quot;) # plot pca by comb pc.plot.type &lt;- plot(pca, asp = 1, pch = pch.gps.type, col = col.gps.type) shapeHulls(pc.plot.type, groups = type, group.cols = col.hull.type) 4.3.1 Minima/maxima of PC1/2 with warp grids # plot x/y maxima/minima ## x - minima ref &lt;- mean.shape &lt;- mshape(Y.gpa$coords) plotRefToTarget(M1 = ref, M2 = pca$shapes$shapes.comp1$min, method = &quot;TPS&quot;) plotRefToTarget(M1 = ref, M2 = pca$shapes$shapes.comp1$max, method = &quot;TPS&quot;) plotRefToTarget(M1 = ref, M2 = pca$shapes$shapes.comp2$min, method = &quot;TPS&quot;) plotRefToTarget(M1 = ref, M2 = pca$shapes$shapes.comp2$max, method = &quot;TPS&quot;) # pca warp neck knitr::include_graphics(&#39;images/pca-warp-neck.jpg&#39;) (#fig:pca.warp.ne)Results of PCA summarising shape variation in bottle necks, gray; and jar necks, orange; with shapes + warp grids for maxima/minima of each axis. 4.4 Neck size and shape A residual randomisation permutation procedure (RRPP; n = 10,000 permutations) was used for all Procrustes ANOVAs (Adams and Collyer 2015; Michael L. Collyer and Adams 2018), which has higher statistical power and a greater ability to identify patterns in the data should they be present (Anderson and Ter Braak 2003). To assess whether shape changes differ by type (geography and time), Procrustes ANOVAs (Goodall 1991) were also run that enlist effect-sizes (zscores) computed as standard deviates of the generated sampling distributions (M. L. Collyer, Sekora, and Adams 2015). # neck size as a function of vessel form (bottle/jar)? fit.size.type &lt;- procD.lm(size ~ type, data = gdf, print.progress = FALSE, iter = 9999) # Procrustes ANOVA: do neck sizes differ as a function of vessel form? anova(fit.size.type) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## type 1 79.9 79.87 0.00289 0.1074 -0.67567 0.7381 ## Residuals 37 27524.6 743.91 0.99711 ## Total 38 27604.5 ## ## Call: procD.lm(f1 = size ~ type, iter = 9999, data = gdf, print.progress = FALSE) # neck shape as a function of vessel form? fit.shape.type &lt;- procD.lm(shape ~ type, data = gdf, print.progress = FALSE, iter = 9999) # Procrustes ANOVA: do neck shapes differ as a function of vessel form? anova(fit.shape.type) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## type 1 0.44899 0.44899 0.27367 13.941 2.8373 5e-04 *** ## Residuals 37 1.19165 0.03221 0.72633 ## Total 38 1.64064 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: procD.lm(f1 = shape ~ type, iter = 9999, data = gdf, print.progress = FALSE) 4.5 Mean shapes # subset landmark coordinates to produce mean shapes new.coords&lt;-coords.subset(A = Y.gpa$coords, group = qdata$type) names(new.coords) ## [1] &quot;bottle&quot; &quot;jar&quot; # type shape means mean &lt;- lapply(new.coords, mshape) # plot mean shapes (type) plot(mean$bottle) plot(mean$jar) # comparison plots plotRefToTarget(mean$bottle, mean$jar, method = c(&quot;points&quot;), mag = 1) knitr::include_graphics(&#39;images/mshape-neck.png&#39;) (#fig:mshape.s)Mean shapes for bottles (a), jars (b), and comparison of bottle (gray) and jar (black) neck shapes (c). References "],["dgm-body-morphology.html", "Chapter 5 3DGM: Body morphology 5.1 Load packages + data 5.2 Generalised Procrustes Analysis 5.3 Principal Components Analysis 5.4 Body size and shape", " Chapter 5 3DGM: Body morphology 5.1 Load packages + data # load packages library(here) library(geomorph) library(tidyverse) library(wesanderson) # read GM data source(&#39;readmulti.csv.R&#39;) setwd(&quot;./data&quot;) filelist &lt;- list.files(pattern = &quot;.csv&quot;) coords &lt;- readmulti.csv(filelist) setwd(&quot;../&quot;) # read qualitative data qdata &lt;- read.csv(&quot;qdata.csv&quot;, header = TRUE, row.names = 1) qdata &lt;- qdata[match(dimnames(coords)[[3]], rownames(qdata)),] 5.2 Generalised Procrustes Analysis Landmark data were aligned to a global coordinate system (Kendall 1981, 1984; Slice 2001), achieved through generalised Procrustes superimposition (Rohlf and Slice 1990) performed in R 4.0.3 (R Core Development Team, 2020) using the geomorph library v. 3.3.2 (Adams et al. 2017; Adams and Otárola-Castillo 2013). Procrustes superimposition translates, scales, and rotates the coordinate data to allow for comparisons among objects (Gower 1975; Rohlf and Slice 1990). The geomorph package uses a partial Procrustes superimposition that projects the aligned specimens into tangent space subsequent to alignment in preparation for the use of multivariate methods that assume linear space (Rohlf 1999; Slice 2001). #select landmarks associated with body b &lt;- c(10:19, 27:36) # new coords body body.coords &lt;- coords[b,,] # gpa Y.gpa &lt;- gpagen(body.coords, PrinAxes = TRUE, ProcD = TRUE, Proj = TRUE, print.progress = FALSE) # geomorph data frame gdf &lt;- geomorph.data.frame(shape = Y.gpa$coords, size = Y.gpa$Csize, type = qdata$type) # render 3d gpa plot #plot(Y.gpa) # gpa plot #knitr::include_graphics(&#39;images/gpa3d.png&#39;) # add centroid size to qdata qdata$csz &lt;- Y.gpa$Csize # print updated qdata with centroid size knitr::kable(qdata, align = &quot;lccccc&quot;, caption = &quot;Modified attributes included in qdata.&quot;) (#tab:gpa.b)Modified attributes included in qdata. group type csz 1608101 phytomorph bottle 274.2253 1608102 phytomorph bottle 365.0474 1608111 anthropomorph jar 335.6275 1608121 phytomorph jar 406.2267 1608122 zoomorph bottle 336.7217 1608124 zoomorph bottle 322.6704 1608125 zoomorph bottle 328.6033 1608126 zoomorph jar 359.5529 1608129 zoomorph jar 327.4137 1608131 zoomorph jar 404.5133 1608140 zoomorph bottle 328.2827 1608141 anthropomorph bottle 303.1628 1608163 zoomorph jar 264.9344 160836 phytomorph bottle 315.0860 160839 zoomorph jar 229.0303 160844 anthropomorph jar 327.6104 160846 zoomorph bottle 326.9875 160847 anthropomorph bottle 252.5061 160848 anthropomorph jar 285.3827 160849 anthropomorph bottle 284.7971 160850 anthropomorph bottle 436.9838 160852 zoomorph bottle 321.6636 160852x anthropomorph jar 359.3210 160859 zoomorph bottle 321.6210 160860 anthropomorph jar 267.2227 160868 zoomorph bottle 400.0546 160873 anthropomorph jar 349.0498 160875 anthropomorph bottle 389.3466 160876 anthropomorph bottle 333.6683 160881 anthropomorph jar 229.3391 160882 zoomorph bottle 320.8026 160884 zoomorph jar 222.2249 160886 zoomorph bottle 247.3586 160888 anthropomorph bottle 231.4397 160892 anthropomorph jar 232.3153 205854 anthropomorph bottle 194.7734 206614 zoomorph jar 268.4917 238944 phytomorph bottle 406.5808 PEX35 zoomorph bottle 398.1711 5.2.1 Boxplot # attributes for boxplot csz &lt;- qdata$csz type &lt;- qdata$type # palette pal &lt;- wes_palette(&quot;Moonrise2&quot;) # boxplot of vessel centroid size by type csz.type &lt;- ggplot(qdata, aes(x = type, y = csz, color = type)) + geom_boxplot(notch = FALSE) + geom_dotplot(binaxis = &#39;y&#39;, stackdir = &#39;center&#39;, dotsize = 0.3) + scale_colour_manual(values = pal) + theme(legend.position = &quot;none&quot;) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + labs(x = &#39;Type (Body)&#39;, y = &#39;Centroid Size&#39;) # render plot csz.type ## Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`. (#fig:box1.b)Boxplot of centroid size by spatial/temporal unit. 5.3 Principal Components Analysis Principal components analysis (Jolliffe 2002) was used to visualise shape variation among bottle and jar necks. The shape changes described by each principal axis are commonly visualised using thin-plate spline warping of a reference 3D mesh (Klingenberg 2013; Sherratt et al. 2014). # principal components analysis pca&lt;-gm.prcomp(Y.gpa$coords) summary(pca) ## ## Ordination type: Principal Component Analysis ## Centering by OLS mean ## Orthogonal projection of OLS residuals ## Number of observations: 39 ## Number of vectors 36 ## ## Importance of Components: ## Comp1 Comp2 Comp3 Comp4 Comp5 Comp6 ## Eigenvalues 0.007652033 0.00146488 0.0007751655 0.0001944611 0.000104974 7.919586e-05 ## Proportion of Variance 0.735368080 0.14077645 0.0744941883 0.0186879076 0.010088108 7.610803e-03 ## Cumulative Proportion 0.735368080 0.87614453 0.9506387171 0.9693266247 0.979414732 9.870255e-01 ## Comp7 Comp8 Comp9 Comp10 Comp11 Comp12 ## Eigenvalues 3.942808e-05 2.273209e-05 2.049943e-05 1.295373e-05 9.750466e-06 6.712634e-06 ## Proportion of Variance 3.789079e-03 2.184577e-03 1.970016e-03 1.244866e-03 9.370296e-04 6.450910e-04 ## Cumulative Proportion 9.908146e-01 9.929992e-01 9.949692e-01 9.962141e-01 9.971511e-01 9.977962e-01 ## Comp13 Comp14 Comp15 Comp16 Comp17 Comp18 ## Eigenvalues 5.075664e-06 3.726256e-06 3.484004e-06 2.508049e-06 2.070059e-06 1.300402e-06 ## Proportion of Variance 4.877764e-04 3.580969e-04 3.348163e-04 2.410260e-04 1.989348e-04 1.249700e-04 ## Cumulative Proportion 9.982840e-01 9.986421e-01 9.989769e-01 9.992179e-01 9.994168e-01 9.995418e-01 ## Comp19 Comp20 Comp21 Comp22 Comp23 Comp24 ## Eigenvalues 1.104114e-06 1.020500e-06 7.577629e-07 6.215223e-07 5.230308e-07 2.224515e-07 ## Proportion of Variance 1.061065e-04 9.807104e-05 7.282178e-05 5.972892e-05 5.026379e-05 2.137782e-05 ## Cumulative Proportion 9.996479e-01 9.997460e-01 9.998188e-01 9.998785e-01 9.999288e-01 9.999502e-01 ## Comp25 Comp26 Comp27 Comp28 Comp29 Comp30 ## Eigenvalues 1.866353e-07 1.266125e-07 8.117560e-08 5.536281e-08 2.186964e-08 1.894095e-08 ## Proportion of Variance 1.793584e-05 1.216759e-05 7.801057e-06 5.320422e-06 2.101695e-06 1.820245e-06 ## Cumulative Proportion 9.999681e-01 9.999803e-01 9.999881e-01 9.999934e-01 9.999955e-01 9.999973e-01 ## Comp31 Comp32 Comp33 Comp34 Comp35 Comp36 ## Eigenvalues 9.347196e-09 7.853700e-09 4.407567e-09 3.085564e-09 2.819566e-09 2.61145e-10 ## Proportion of Variance 8.982749e-07 7.547485e-07 4.235717e-07 2.965258e-07 2.709631e-07 2.50963e-08 ## Cumulative Proportion 9.999982e-01 9.999990e-01 9.999994e-01 9.999997e-01 1.000000e+00 1.00000e+00 # set plot parameters (types) pch.gps.type &lt;- c(15,17)[as.factor(type)] col.gps.type &lt;- wes_palette(&quot;Moonrise2&quot;)[as.factor(type)] col.hull.type &lt;- c(&quot;#798E87&quot;,&quot;#C27D38&quot;) # plot pca by comb pc.plot.type &lt;- plot(pca, asp = 1, pch = pch.gps.type, col = col.gps.type) shapeHulls(pc.plot.type, groups = type, group.cols = col.hull.type) 5.3.1 Minima/maxima of PC1/2 with warp grids # plot x/y maxima/minima ## x - minima ref &lt;- mean.shape &lt;- mshape(Y.gpa$coords) plotRefToTarget(M1 = ref, M2 = pca$shapes$shapes.comp1$min, method = &quot;TPS&quot;) plotRefToTarget(M1 = ref, M2 = pca$shapes$shapes.comp1$max, method = &quot;TPS&quot;) plotRefToTarget(M1 = ref, M2 = pca$shapes$shapes.comp2$min, method = &quot;TPS&quot;) plotRefToTarget(M1 = ref, M2 = pca$shapes$shapes.comp2$max, method = &quot;TPS&quot;) # pca warp body knitr::include_graphics(&#39;images/pca-warp-body.jpg&#39;) (#fig:pca.warp.bo)Results of PCA summarising shape variation in bottle bodies, gray; and jar bodies, orange; with shapes + warp grids for maxima/minima of each axis. 5.4 Body size and shape A residual randomisation permutation procedure (RRPP; n = 10,000 permutations) was used for all Procrustes ANOVAs (Adams and Collyer 2015; Michael L. Collyer and Adams 2018), which has higher statistical power and a greater ability to identify patterns in the data should they be present (Anderson and Ter Braak 2003). To assess whether shape changes differ by type (geography and time), Procrustes ANOVAs (Goodall 1991) were also run that enlist effect-sizes (zscores) computed as standard deviates of the generated sampling distributions (M. L. Collyer, Sekora, and Adams 2015). # body size as a function of vessel form (bottle/jar)? fit.size.type &lt;- procD.lm(size ~ type, data = gdf, print.progress = FALSE, iter = 9999) # Procrustes ANOVA: do body sizes differ as a function of vessel form? anova(fit.size.type) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## type 1 3492 3491.6 0.02498 0.9481 0.48168 0.3336 ## Residuals 37 136268 3682.9 0.97502 ## Total 38 139759 ## ## Call: procD.lm(f1 = size ~ type, iter = 9999, data = gdf, print.progress = FALSE) # body shape as a function of vessel form? fit.shape.type &lt;- procD.lm(shape ~ type, data = gdf, print.progress = FALSE, iter = 9999) # Procrustes ANOVA: do body shapes differ as a function of vessel form? anova(fit.shape.type) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## type 1 0.03142 0.0314182 0.07946 3.1936 1.6306 0.0521 . ## Residuals 37 0.36400 0.0098378 0.92054 ## Total 38 0.39542 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: procD.lm(f1 = shape ~ type, iter = 9999, data = gdf, print.progress = FALSE) References "],["dgm-base-morphology.html", "Chapter 6 3DGM: Base morphology 6.1 Load packages + data 6.2 Generalised Procrustes Analysis 6.3 Principal Components Analysis 6.4 Base size and shape 6.5 Mean shapes", " Chapter 6 3DGM: Base morphology 6.1 Load packages + data # load packages library(here) library(geomorph) library(tidyverse) library(wesanderson) # read GM data source(&#39;readmulti.csv.R&#39;) setwd(&quot;./data&quot;) filelist &lt;- list.files(pattern = &quot;.csv&quot;) coords &lt;- readmulti.csv(filelist) setwd(&quot;../&quot;) # read qualitative data qdata &lt;- read.csv(&quot;qdata.csv&quot;, header = TRUE, row.names = 1) qdata &lt;- qdata[match(dimnames(coords)[[3]], rownames(qdata)),] 6.2 Generalised Procrustes Analysis Landmark data were aligned to a global coordinate system (Kendall 1981, 1984; Slice 2001), achieved through generalised Procrustes superimposition (Rohlf and Slice 1990) performed in R 4.0.3 (R Core Development Team, 2020) using the geomorph library v. 3.3.2 (Adams et al. 2017; Adams and Otárola-Castillo 2013). Procrustes superimposition translates, scales, and rotates the coordinate data to allow for comparisons among objects (Gower 1975; Rohlf and Slice 1990). The geomorph package uses a partial Procrustes superimposition that projects the aligned specimens into tangent space subsequent to alignment in preparation for the use of multivariate methods that assume linear space (Rohlf 1999; Slice 2001). #select landmarks associated with base ba &lt;- c(19:27) # new coords base base.coords &lt;- coords[ba,,] # gpa Y.gpa &lt;- gpagen(base.coords, PrinAxes = TRUE, ProcD = TRUE, Proj = TRUE, print.progress = FALSE) # geomorph data frame gdf &lt;- geomorph.data.frame(shape = Y.gpa$coords, size = Y.gpa$Csize, type = qdata$type) # render 3d gpa plot #plot(Y.gpa) # gpa plot #knitr::include_graphics(&#39;images/gpa3d.png&#39;) # add centroid size to qdata qdata$csz &lt;- Y.gpa$Csize # print updated qdata with centroid size knitr::kable(qdata, align = &quot;lccccc&quot;, caption = &quot;Modified attributes included in qdata.&quot;) (#tab:gpa.ba)Modified attributes included in qdata. group type csz 1608101 phytomorph bottle 13.43967 1608102 phytomorph bottle 81.68991 1608111 anthropomorph jar 87.63706 1608121 phytomorph jar 79.17151 1608122 zoomorph bottle 74.06927 1608124 zoomorph bottle 74.77839 1608125 zoomorph bottle 73.31102 1608126 zoomorph jar 93.27318 1608129 zoomorph jar 68.59451 1608131 zoomorph jar 77.01104 1608140 zoomorph bottle 76.74401 1608141 anthropomorph bottle 57.52559 1608163 zoomorph jar 86.52627 160836 phytomorph bottle 67.18371 160839 zoomorph jar 55.02923 160844 anthropomorph jar 67.79305 160846 zoomorph bottle 80.98466 160847 anthropomorph bottle 52.42881 160848 anthropomorph jar 62.84172 160849 anthropomorph bottle 63.63705 160850 anthropomorph bottle 68.18596 160852 zoomorph bottle 66.70759 160852x anthropomorph jar 68.44521 160859 zoomorph bottle 67.29361 160860 anthropomorph jar 77.73720 160868 zoomorph bottle 65.27293 160873 anthropomorph jar 71.79082 160875 anthropomorph bottle 99.24373 160876 anthropomorph bottle 59.05257 160881 anthropomorph jar 59.42126 160882 zoomorph bottle 70.84768 160884 zoomorph jar 56.32831 160886 zoomorph bottle 29.63576 160888 anthropomorph bottle 50.79869 160892 anthropomorph jar 60.75916 205854 anthropomorph bottle 62.67522 206614 zoomorph jar 73.86302 238944 phytomorph bottle 77.83354 PEX35 zoomorph bottle 101.83501 6.2.1 Boxplot # attributes for boxplot csz &lt;- qdata$csz type &lt;- qdata$type # palette pal &lt;- wes_palette(&quot;Moonrise2&quot;) # boxplot of vessel centroid size by type csz.type &lt;- ggplot(qdata, aes(x = type, y = csz, color = type)) + geom_boxplot(notch = FALSE) + geom_dotplot(binaxis = &#39;y&#39;, stackdir = &#39;center&#39;, dotsize = 0.3) + scale_colour_manual(values = pal) + theme(legend.position = &quot;none&quot;) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + labs(x = &#39;Type (Base)&#39;, y = &#39;Centroid Size&#39;) # render plot csz.type ## Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`. (#fig:box1.ba)Boxplot of centroid size by spatial/temporal unit. 6.3 Principal Components Analysis Principal components analysis (Jolliffe 2002) was used to visualise shape variation among bottle and jar necks. The shape changes described by each principal axis are commonly visualised using thin-plate spline warping of a reference 3D mesh (Klingenberg 2013; Sherratt et al. 2014). # principal components analysis pca&lt;-gm.prcomp(Y.gpa$coords) summary(pca) ## ## Ordination type: Principal Component Analysis ## Centering by OLS mean ## Orthogonal projection of OLS residuals ## Number of observations: 39 ## Number of vectors 20 ## ## Importance of Components: ## Comp1 Comp2 Comp3 Comp4 Comp5 Comp6 ## Eigenvalues 0.001280835 0.0007072728 5.760763e-05 2.356356e-05 4.228370e-06 2.351387e-06 ## Proportion of Variance 0.616350041 0.3403463850 2.772134e-02 1.133901e-02 2.034732e-03 1.131510e-03 ## Cumulative Proportion 0.616350041 0.9566964257 9.844178e-01 9.957568e-01 9.977915e-01 9.989230e-01 ## Comp7 Comp8 Comp9 Comp10 Comp11 Comp12 ## Eigenvalues 8.809164e-07 5.909993e-07 4.944974e-07 2.292176e-07 2.228953e-08 1.185817e-08 ## Proportion of Variance 4.239053e-04 2.843945e-04 2.379568e-04 1.103017e-04 1.072593e-05 5.706266e-06 ## Cumulative Proportion 9.993469e-01 9.996313e-01 9.998693e-01 9.999796e-01 9.999903e-01 9.999960e-01 ## Comp13 Comp14 Comp15 Comp16 Comp17 Comp18 ## Eigenvalues 5.688510e-09 2.604546e-09 5.682576e-17 2.267665e-17 1.447420e-17 1.117660e-17 ## Proportion of Variance 2.737365e-06 1.253332e-06 2.734510e-14 1.091222e-14 6.965123e-15 5.378288e-15 ## Cumulative Proportion 9.999987e-01 1.000000e+00 1.000000e+00 1.000000e+00 1.000000e+00 1.000000e+00 ## Comp19 Comp20 ## Eigenvalues 7.626915e-18 7.099899e-18 ## Proportion of Variance 3.670144e-15 3.416539e-15 ## Cumulative Proportion 1.000000e+00 1.000000e+00 # set plot parameters (types) pch.gps.type &lt;- c(15,17)[as.factor(type)] col.gps.type &lt;- wes_palette(&quot;Moonrise2&quot;)[as.factor(type)] col.hull.type &lt;- c(&quot;#798E87&quot;,&quot;#C27D38&quot;) # plot pca by comb pc.plot.type &lt;- plot(pca, asp = 1, pch = pch.gps.type, col = col.gps.type) shapeHulls(pc.plot.type, groups = type, group.cols = col.hull.type) 6.3.1 Minima/maxima of PC1/2 with warp grids # plot x/y maxima/minima ## x - minima ref &lt;- mean.shape &lt;- mshape(Y.gpa$coords) plotRefToTarget(M1 = ref, M2 = pca$shapes$shapes.comp1$min, method = &quot;TPS&quot;) plotRefToTarget(M1 = ref, M2 = pca$shapes$shapes.comp1$max, method = &quot;TPS&quot;) plotRefToTarget(M1 = ref, M2 = pca$shapes$shapes.comp2$min, method = &quot;TPS&quot;) plotRefToTarget(M1 = ref, M2 = pca$shapes$shapes.comp2$max, method = &quot;TPS&quot;) # pca warp knitr::include_graphics(&#39;images/pca-warp-base.jpg&#39;) (#fig:pca.warp.ba)Results of PCA summarising shape variation in bottles, gray; and jars, orange; with shapes + warp grids for maxima/minima of each axis. 6.4 Base size and shape A residual randomisation permutation procedure (RRPP; n = 10,000 permutations) was used for all Procrustes ANOVAs (Adams and Collyer 2015; Michael L. Collyer and Adams 2018), which has higher statistical power and a greater ability to identify patterns in the data should they be present (Anderson and Ter Braak 2003). To assess whether shape changes differ by type (geography and time), Procrustes ANOVAs (Goodall 1991) were also run that enlist effect-sizes (zscores) computed as standard deviates of the generated sampling distributions (M. L. Collyer, Sekora, and Adams 2015). # base size as a function of vessel form (bottle/jar)? fit.size.type &lt;- procD.lm(size ~ type, data = gdf, print.progress = FALSE, iter = 9999) # Procrustes ANOVA: do basal sizes differ as a function of vessel form? anova(fit.size.type) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## type 1 225.8 225.84 0.02224 0.8414 0.37433 0.3743 ## Residuals 37 9930.5 268.39 0.97776 ## Total 38 10156.4 ## ## Call: procD.lm(f1 = size ~ type, iter = 9999, data = gdf, print.progress = FALSE) # base shape as a function of vessel form? fit.shape.type &lt;- procD.lm(shape ~ type, data = gdf, print.progress = FALSE, iter = 9999) # Procrustes ANOVA: do basal shapes differ as a function of vessel form? anova(fit.shape.type) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## type 1 0.013197 0.0131965 0.16711 7.4238 2.8103 0.001 ** ## Residuals 37 0.065771 0.0017776 0.83289 ## Total 38 0.078968 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: procD.lm(f1 = shape ~ type, iter = 9999, data = gdf, print.progress = FALSE) 6.5 Mean shapes # subset landmark coordinates to produce mean shapes new.coords&lt;-coords.subset(A = Y.gpa$coords, group = qdata$type) names(new.coords) ## [1] &quot;bottle&quot; &quot;jar&quot; # type shape means mean &lt;- lapply(new.coords, mshape) # plot mean shapes (type) plot(mean$bottle) plot(mean$jar) # comparison plots plotRefToTarget(mean$bottle, mean$jar, method = c(&quot;points&quot;), mag = 1) knitr::include_graphics(&#39;images/mshape-base.png&#39;) (#fig:mshape.ba)Mean shapes for bottle bases (a), jar bases (b), and comparison of bottle (gray) and jar (black) base shapes (c). References "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
