[["index.html", "Supplementary materials for paper: The Changing Shape of Empire: A GM Study of Chimú Bottles in Museum Collections Preface 0.1 Basis of inquiry 0.2 Primary findings 0.3 Acknowledgments 0.4 Funding 0.5 Data management 0.6 Colophon", " Supplementary materials for paper: The Changing Shape of Empire: A GM Study of Chimú Bottles in Museum Collections R. Alan Covey, Robert Z. Selden Jr., Nicole Payntar, and Astrid Runggaldier 2021-11-20 Preface Reproducibilitythe ability to recompute resultsand replicabilitythe chances other experimenters will achieve a consistent resultare two foundational characteristics of successful scientific research (Leek and Peng 2015). 0.1 Basis of inquiry After centuries of looting along Perus North Coast, archaeologists acknowledge that the pottery of the Chimú Empire is one of the most collected Andean artifacts, but also one of the most poorly understood. Much of the enduring classificatory uncertainty comes from the problematic provenance of most Chimú vessels, and the fact that the distinctive blackware identified as Chimú represents the production of workshops from across an extensive area, during periods of regional political decentralization (c. 900-1200 CE), imperial growth (c. 1200-1450), and foreign conquest by the Inca (c. 1450-1535) and Spanish (after 1532) empires. This chapter builds on previous seriations and field observations, using geometric morphometric analysis of a sample of 3D-scanned Chimú bottles from publicly held collections at the University of Texas (Austin) and the American Museum of Natural History. Since Chimú bottles were formed in workshops using molds, variations in vessel shape can serve as indicators of variable practices. We compare a sample of typical Chimú blackware bottles with a sample of Inca-Chimú vessels that carry features typical of the short Inca occupation of the North Coast. Differences between the two samples offer new lines of evidence that can guide more precise classifications of these vessels, as well as new interpretations of the imperial history of Perus North Coast. 0.2 Primary findings 0.3 Acknowledgments We extend our gratitude to 0.4 Funding Components of this analytical work flow were developed and funded by a Preservation Technology and Training grant (P14AP00138) to RZS from the National Center for Preservation Technology and Training (NCPTT), and additional grants to RZS from the Caddo Tribe of Oklahoma and the National Forests and Grasslands in Texas (15-PA-11081300-033 and 20-PA-11081300-074). Funding to scan the Chimú vessels in the Art and Art History Collections at The University of Texas at Austin was provided by The University of Texas at Austin. 0.5 Data management This volume is written in Markdown, and all files needed to reproduce it are included in the GitHub repository, which is digitally curated on the Open Science Framework. The reproducible nature of this undertaking provides a means for others to critically assess and evaluate the various analytical components (Gray and Marwick 2019; Peng 2011; Gandrud 2014), which is a necessary requirement for the production of reliable knowledge. Reproducibility projects in psychology and cancer biology are impacting current research practices across all domains. Examples of reproducible research are becoming more abundant in archaeology (Marwick 2016; Ivanovait et al. 2020; Selden Jr., Dockall, and Dubied 2020), and the next generation of archaeologists are learning those tools and methods needed to reproduce and/or replicate research results (Marwick et al. 2019). Reproducible and replicable research work flows are often employed at the highest levels of humanities-based inquiries to mitigate concern or doubt regarding proper execution, and is of particular import should the results haveexplicitly or implicitlya major impact on scientific progress (Peels and Bouter 2018). Components of the undertaking presented in this volume are novel, and this basic research endeavour is rooted in archaeological epistemology. Sharing data is not enough, and if investigators share only data absent their analysis code, that places a substantive burden on those who may seek to build upon or replicate their work in the future. In this instance, the choice to pursue a replicable work flow occurs based on the simple fact that this work is foundational, and meant to begin a meaningful discussion related to projectile morphology. The data and analysis code associated with this project can be accessed through this document or the GitHub repository, and is digitally curated on the Open Science Framework (DOI 10.17605/OSF.IO/VZHJR). 0.6 Colophon This version of the analysis was generated on 2021-11-20 08:58:10 using the following computational environment and dependencies: # what R packages and versions were used? if (&quot;devtools&quot; %in% installed.packages()) devtools::session_info() ## - Session info ---------------------------------------------------------------------------------------------- ## hash: person in tuxedo: light skin tone, NG button, woman with headscarf: light skin tone ## ## setting value ## version R version 4.1.1 (2021-08-10) ## os Windows 10 x64 (build 19043) ## system x86_64, mingw32 ## ui RStudio ## language (EN) ## collate English_United States.1252 ## ctype English_United States.1252 ## tz America/Chicago ## date 2021-11-20 ## rstudio 2021.09.0+351 Ghost Orchid (desktop) ## pandoc 2.14.0.3 @ C:/Program Files/RStudio/bin/pandoc/ (via rmarkdown) ## ## - Packages --------------------------------------------------------------------------------------------------- ## package * version date (UTC) lib source ## abind 1.4-5 2016-07-21 [1] CRAN (R 4.1.0) ## ape 5.5 2021-04-25 [1] CRAN (R 4.1.0) ## assertthat 0.2.1 2019-03-21 [1] CRAN (R 4.1.0) ## backports 1.3.0 2021-10-27 [1] CRAN (R 4.1.1) ## bookdown 0.24 2021-09-02 [1] CRAN (R 4.1.1) ## broom 0.7.10 2021-10-31 [1] CRAN (R 4.1.1) ## bslib 0.3.1 2021-10-06 [1] CRAN (R 4.1.1) ## cachem 1.0.6 2021-08-19 [1] CRAN (R 4.1.1) ## callr 3.7.0 2021-04-20 [1] CRAN (R 4.1.0) ## car 3.0-12 2021-11-06 [1] CRAN (R 4.1.1) ## carData 3.0-4 2020-05-22 [1] CRAN (R 4.1.0) ## cellranger 1.1.0 2016-07-27 [1] CRAN (R 4.1.0) ## cli 3.1.0 2021-10-27 [1] CRAN (R 4.1.1) ## cluster * 2.1.2 2021-04-17 [2] CRAN (R 4.1.1) ## colorspace 2.0-2 2021-06-24 [1] CRAN (R 4.1.0) ## cowplot 1.1.1 2020-12-30 [1] CRAN (R 4.1.0) ## crayon 1.4.2 2021-10-29 [1] CRAN (R 4.1.1) ## curl 4.3.2 2021-06-23 [1] CRAN (R 4.1.0) ## DBI 1.1.1 2021-01-15 [1] CRAN (R 4.1.0) ## dbplyr 2.1.1 2021-04-06 [1] CRAN (R 4.1.0) ## desc 1.4.0 2021-09-28 [1] CRAN (R 4.1.1) ## devtools 2.4.2 2021-06-07 [1] CRAN (R 4.1.0) ## digest 0.6.28 2021-09-23 [1] CRAN (R 4.1.1) ## dplyr * 1.0.7 2021-06-18 [1] CRAN (R 4.1.0) ## ellipsis 0.3.2 2021-04-29 [1] CRAN (R 4.1.0) ## evaluate 0.14 2019-05-28 [1] CRAN (R 4.1.0) ## fansi 0.5.0 2021-05-25 [1] CRAN (R 4.1.0) ## farver 2.1.0 2021-02-28 [1] CRAN (R 4.1.0) ## fastmap 1.1.0 2021-01-25 [1] CRAN (R 4.1.0) ## forcats * 0.5.1 2021-01-27 [1] CRAN (R 4.1.1) ## fs 1.5.0 2020-07-31 [1] CRAN (R 4.1.0) ## generics 0.1.1 2021-10-25 [1] CRAN (R 4.1.1) ## geomorph * 4.0.1 2021-11-02 [1] Github (geomorphR/geomorph@e847b82) ## ggExtra * 0.9 2019-08-27 [1] CRAN (R 4.1.0) ## ggfortify * 0.4.13 2021-11-20 [1] Github (sinhrks/ggfortify@4908dc0) ## ggplot2 * 3.3.5 2021-06-25 [1] CRAN (R 4.1.0) ## ggpubr * 0.4.0.999 2021-11-20 [1] Github (kassambara/ggpubr@ac5a01f) ## ggsignif 0.6.3 2021-09-09 [1] CRAN (R 4.1.1) ## git2r 0.28.0 2021-01-10 [1] CRAN (R 4.1.0) ## glue 1.5.0 2021-11-07 [1] CRAN (R 4.1.1) ## gridExtra 2.3 2017-09-09 [1] CRAN (R 4.1.0) ## gtable 0.3.0 2019-03-25 [1] CRAN (R 4.1.0) ## haven 2.4.3 2021-08-04 [1] CRAN (R 4.1.0) ## here * 1.0.1 2020-12-13 [1] CRAN (R 4.1.0) ## highr 0.9 2021-04-16 [1] CRAN (R 4.1.0) ## hms 1.1.1 2021-09-26 [1] CRAN (R 4.1.1) ## htmltools 0.5.2 2021-08-25 [1] CRAN (R 4.1.1) ## htmlwidgets 1.5.4 2021-09-08 [1] CRAN (R 4.1.1) ## httpuv 1.6.3 2021-09-09 [1] CRAN (R 4.1.1) ## httr 1.4.2 2020-07-20 [1] CRAN (R 4.1.0) ## jpeg 0.1-9 2021-07-24 [1] CRAN (R 4.1.0) ## jquerylib 0.1.4 2021-04-26 [1] CRAN (R 4.1.0) ## jsonlite 1.7.2 2020-12-09 [1] CRAN (R 4.1.0) ## knitr 1.36 2021-09-29 [1] CRAN (R 4.1.1) ## labeling 0.4.2 2020-10-20 [1] CRAN (R 4.1.0) ## later 1.3.0 2021-08-18 [1] CRAN (R 4.1.1) ## lattice 0.20-44 2021-05-02 [2] CRAN (R 4.1.1) ## lifecycle 1.0.1 2021-09-24 [1] CRAN (R 4.1.1) ## lubridate 1.8.0 2021-10-07 [1] CRAN (R 4.1.1) ## magrittr 2.0.1 2020-11-17 [1] CRAN (R 4.1.0) ## MASS 7.3-54 2021-05-03 [2] CRAN (R 4.1.1) ## Matrix * 1.3-4 2021-06-01 [2] CRAN (R 4.1.1) ## memoise 2.0.0 2021-01-26 [1] CRAN (R 4.1.0) ## mime 0.12 2021-09-28 [1] CRAN (R 4.1.1) ## miniUI 0.1.1.1 2018-05-18 [1] CRAN (R 4.1.0) ## modelr 0.1.8 2020-05-19 [1] CRAN (R 4.1.0) ## munsell 0.5.0 2018-06-12 [1] CRAN (R 4.1.0) ## nlme 3.1-152 2021-02-04 [2] CRAN (R 4.1.1) ## pillar 1.6.4 2021-10-18 [1] CRAN (R 4.1.1) ## pkgbuild 1.2.0 2020-12-15 [1] CRAN (R 4.1.0) ## pkgconfig 2.0.3 2019-09-22 [1] CRAN (R 4.1.0) ## pkgload 1.2.3 2021-10-13 [1] CRAN (R 4.1.1) ## prettyunits 1.1.1 2020-01-24 [1] CRAN (R 4.1.0) ## processx 3.5.2 2021-04-30 [1] CRAN (R 4.1.0) ## promises 1.2.0.1 2021-02-11 [1] CRAN (R 4.1.0) ## ps 1.6.0 2021-02-28 [1] CRAN (R 4.1.0) ## purrr * 0.3.4 2020-04-17 [1] CRAN (R 4.1.0) ## R6 2.5.1 2021-08-19 [1] CRAN (R 4.1.1) ## Rcpp 1.0.7 2021-07-07 [1] CRAN (R 4.1.0) ## readr * 2.1.0 2021-11-11 [1] CRAN (R 4.1.1) ## readxl 1.3.1 2019-03-13 [1] CRAN (R 4.1.0) ## remotes 2.4.1 2021-09-29 [1] CRAN (R 4.1.1) ## reprex 2.0.1 2021-08-05 [1] CRAN (R 4.1.0) ## rgl * 0.107.14 2021-08-21 [1] CRAN (R 4.1.1) ## rlang 0.4.12 2021-10-18 [1] CRAN (R 4.1.1) ## rmarkdown 2.11 2021-09-14 [1] CRAN (R 4.1.1) ## rprojroot 2.0.2 2020-11-15 [1] CRAN (R 4.1.0) ## RRPP * 1.1.2 2021-11-02 [1] Github (mlcollyer/RRPP@96cab18) ## rstatix 0.7.0 2021-02-13 [1] CRAN (R 4.1.0) ## rstudioapi 0.13 2020-11-12 [1] CRAN (R 4.1.0) ## rvest 1.0.2 2021-10-16 [1] CRAN (R 4.1.1) ## sass 0.4.0 2021-05-12 [1] CRAN (R 4.1.0) ## scales 1.1.1 2020-05-11 [1] CRAN (R 4.1.0) ## sessioninfo 1.2.1 2021-11-02 [1] CRAN (R 4.1.1) ## shiny 1.7.1 2021-10-02 [1] CRAN (R 4.1.1) ## stringi 1.7.5 2021-10-04 [1] CRAN (R 4.1.1) ## stringr * 1.4.0 2019-02-10 [1] CRAN (R 4.1.0) ## testthat 3.1.0 2021-10-04 [1] CRAN (R 4.1.1) ## tibble * 3.1.6 2021-11-07 [1] CRAN (R 4.1.1) ## tidyr * 1.1.4 2021-09-27 [1] CRAN (R 4.1.1) ## tidyselect 1.1.1 2021-04-30 [1] CRAN (R 4.1.0) ## tidyverse * 1.3.1.9000 2021-11-20 [1] Github (tidyverse/tidyverse@663456e) ## tzdb 0.2.0 2021-10-27 [1] CRAN (R 4.1.1) ## usethis 2.1.3 2021-10-27 [1] CRAN (R 4.1.1) ## utf8 1.2.2 2021-07-24 [1] CRAN (R 4.1.0) ## vctrs 0.3.8 2021-04-29 [1] CRAN (R 4.1.0) ## wesanderson * 0.3.6 2018-04-20 [1] CRAN (R 4.1.0) ## withr 2.4.2 2021-04-18 [1] CRAN (R 4.1.0) ## xfun 0.28 2021-11-04 [1] CRAN (R 4.1.1) ## xml2 1.3.2 2020-04-23 [1] CRAN (R 4.1.0) ## xtable 1.8-4 2019-04-21 [1] CRAN (R 4.1.0) ## yaml 2.2.1 2020-02-01 [1] CRAN (R 4.1.0) ## ## [1] C:/Users/seldenjrz/Documents/R/win-library/4.1 ## [2] C:/Program Files/R/R-4.1.1/library ## ## -------------------------------------------------------------------------------------------------------------- Current Git commit details are: # where can I find this commit? if (&quot;git2r&quot; %in% installed.packages() &amp; git2r::in_repository(path = &quot;.&quot;)) git2r::repository(here::here()) ## Local: main D:/github/anthro.phyto.zoomorph ## Remote: main @ origin (https://github.com/seldenlab/anthro.phyto.zoomorph) ## Head: [54514ba] 2021-11-20: &lt;init analysis&gt; References "],["linear-chimú-vessel-metrics.html", "Chapter 1 Linear Chimú vessel metrics 1.1 Load data + define variables 1.2 Boxplots for variable by group 1.3 Principal Components Analysis for group 1.4 Density plots for variable ~ group 1.5 Analyses of Variance (ANOVA) for variable ~ group", " Chapter 1 Linear Chimú vessel metrics # install required analysis packages devtools::install_github(&quot;tidyverse/tidyverse&quot;) ## Skipping install of &#39;tidyverse&#39; from a github remote, the SHA1 (663456eb) has not changed since last install. ## Use `force = TRUE` to force installation devtools::install_github(&quot;mlcollyer/RRPP&quot;) ## Skipping install of &#39;RRPP&#39; from a github remote, the SHA1 (96cab18f) has not changed since last install. ## Use `force = TRUE` to force installation devtools::install_github(&quot;kassambara/ggpubr&quot;) ## Skipping install of &#39;ggpubr&#39; from a github remote, the SHA1 (ac5a01f5) has not changed since last install. ## Use `force = TRUE` to force installation devtools::install_github(&#39;sinhrks/ggfortify&#39;) ## Skipping install of &#39;ggfortify&#39; from a github remote, the SHA1 (4908dc00) has not changed since last install. ## Use `force = TRUE` to force installation # load libraries library(here) library(tidyverse) library(RRPP) library(ggpubr) library(ggfortify) library(cluster) library(wesanderson) library(ggExtra) 1.1 Load data + define variables data &lt;- read.csv(&quot;potmeas.csv&quot;, header = TRUE, as.is = TRUE) # define variables od &lt;- data$orifice.diameter # orifice diameter bd &lt;- data$base.diameter # base diameter nd &lt;- data$bneck.diameter # neck diameter bl &lt;- data$wide.diameter # belly diameter h &lt;- data$height # height rt &lt;- data$rim.thickness # rim thickness gp &lt;- data$form # bottle or jar 1.2 Boxplots for variable by group # boxplot of orifice diameter ~ group odgroup &lt;- ggplot(data, aes(x = gp, y = od, color = gp)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;,stackdir = &#39;center&#39;,dotsize = 0.3) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + labs(x = &quot;Form&quot;, y = &quot;Orifice Diam&quot;) + theme(legend.position = &quot;none&quot;) # boxplot of base diameter ~ group bdgroup &lt;- ggplot(data, aes(x = gp, y = bd, color = gp)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;,stackdir = &#39;center&#39;,dotsize = 0.3) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + labs(x = &quot;Form&quot;, y = &quot;Base Diam&quot;) + theme(legend.position = &quot;none&quot;) # boxplot of neck diameter ~ group ndgroup &lt;- ggplot(data, aes(x = gp, y = nd, color = gp)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;,stackdir = &#39;center&#39;,dotsize = 0.3) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + labs(x = &quot;Form&quot;, y = &quot;Neck Diam&quot;) + theme(legend.position = &quot;none&quot;) # boxplot of belly diameter ~ group blgroup &lt;- ggplot(data, aes(x = gp, y = bl, color = gp)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;,stackdir = &#39;center&#39;,dotsize = 0.3) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + labs(x = &quot;Form&quot;, y = &quot;Belly Diam&quot;) + theme(legend.position = &quot;none&quot;) # boxplot of height ~ group hgroup &lt;- ggplot(data, aes(x = gp, y = h, color = gp)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;,stackdir = &#39;center&#39;,dotsize = 0.3) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + labs(x = &quot;Form&quot;, y = &quot;Height&quot;) + theme(legend.position = &quot;none&quot;) # boxplot of rim thickness ~ group rtgroup &lt;- ggplot(data, aes(x = gp, y = rt, color = gp)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;,stackdir = &#39;center&#39;,dotsize = 0.3) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + labs(x = &quot;Form&quot;, y = &quot;Rim Thick&quot;) + theme(legend.position = &quot;none&quot;) # render figure sitefigure&lt;-ggarrange(odgroup, bdgroup, ndgroup, blgroup, hgroup, rtgroup, labels = c(&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;,&quot;e&quot;,&quot;f&quot;), ncol = 3, nrow = 2) ## Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`. ## Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`. ## Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`. ## Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`. ## Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`. ## Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`. sitefigure Figure 1.1: Boxplots of orifice diameter, base diameter, neck diameter, belly diameter, height, and rim thickness for the anthropomorphic, phytomorphic, and zoomorphic Chimú vessels used in this study. 1.3 Principal Components Analysis for group # set plot parameters to plot by group df &lt;- data[c(3:8)] pch.gps.gp &lt;- c(15,17)[as.factor(gp)] col.gps.gp &lt;- wes_palette(&quot;Moonrise2&quot;)[as.factor(gp)] ## pca plot pca &lt;- autoplot(prcomp(df), data = data, asp = 1, shape = pch.gps.gp, colour = &quot;form&quot;, variance_percentage = TRUE, loadings = TRUE, loadings.colour = &#39;blue&#39;, loadings.label = TRUE, loadings.label.size = 3, frame = TRUE, frame.type = &#39;t&#39;) + scale_fill_manual(values = wes_palette(&quot;Moonrise2&quot;)) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) ggMarginal(pca, groupColour = TRUE) Figure 1.2: Results of Principal Components Analysis for linear metrics associated with the Chimu vessels used in this study (gray squares, anthropomorphic; orange triangles, phytomorphic; tan circles, zoomorphic). 1.4 Density plots for variable ~ group 1.4.1 Orifice diameter ~ group # density plot for orifice diameter by group Group &lt;- data$form ggplot(data, aes(x = od, fill = Group, colour = Group)) + geom_density(alpha = .5) + scale_fill_manual(values = wes_palette(&quot;Moonrise2&quot;)) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + xlim(0,10) + labs(x = &#39;Orifice Diameter&#39;, y = &#39;density&#39;) (#fig:density.gp.od)Density plot for orifice diameter by group. 1.4.2 Base diameter ~ group # density plot for base diameter by group ggplot(data, aes(x = bd, fill = Group, colour = Group)) + geom_density(alpha = .5) + scale_fill_manual(values = wes_palette(&quot;Moonrise2&quot;)) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + xlim(0,7) + labs(x = &#39;Base Diameter&#39;, y = &#39;density&#39;) (#fig:density.gp.bd)Density plot for base diameter by group. 1.4.3 Neck diameter ~ group # density plot for neck diameter by group ggplot(data, aes(x = nd, fill = Group, colour = Group)) + geom_density(alpha = .5) + scale_fill_manual(values = wes_palette(&quot;Moonrise2&quot;)) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + xlim(0,10) + labs(x = &#39;Neck Diameter&#39;, y = &#39;density&#39;) (#fig:density.gp.nd)Density plot for neck diameter by group. 1.4.4 Belly diameter ~ group # density plot for belly diameter by group ggplot(data, aes(x = bl, fill = Group, colour = Group)) + geom_density(alpha = .5) + scale_fill_manual(values = wes_palette(&quot;Moonrise2&quot;)) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + xlim(5,33) + labs(x = &#39;Belly Diameter&#39;, y = &#39;density&#39;) (#fig:density.gp.bl)Density plot for belly diameter by group. 1.4.5 Height ~ group # density plot for height by group ggplot(data, aes(x = h, fill = Group, colour = Group)) + geom_density(alpha = .5) + scale_fill_manual(values = wes_palette(&quot;Moonrise2&quot;)) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + xlim(8,30) + labs(x = &#39;Vessel Height&#39;, y = &#39;density&#39;) (#fig:density.gp.h)Density plot for vessel height by group. 1.5 Analyses of Variance (ANOVA) for variable ~ group 1.5.1 ANOVA Orifice diameter ~ group # anova = orifice diameter ~ group gp.od &lt;- lm.rrpp(od ~ gp, SS.type = &quot;I&quot;, data = data, iter = 9999, print.progress = FALSE) anova(gp.od) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## gp 1 26.339 26.3392 0.16886 7.7205 2.1794 0.0091 ** ## Residuals 38 129.640 3.4116 0.83114 ## Total 39 155.979 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: lm.rrpp(f1 = od ~ gp, iter = 9999, SS.type = &quot;I&quot;, data = data, print.progress = FALSE) 1.5.2 ANOVA Base diameter of Chimú vessels # anova = base diameter ~ group gp.bd &lt;- lm.rrpp(bd ~ gp, SS.type = &quot;I&quot;, data = data, iter = 9999, print.progress = FALSE) anova(gp.bd) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## gp 1 0.548 0.54837 0.01103 0.4239 0.0019808 0.5089 ## Residuals 38 49.163 1.29375 0.98897 ## Total 39 49.711 ## ## Call: lm.rrpp(f1 = bd ~ gp, iter = 9999, SS.type = &quot;I&quot;, data = data, print.progress = FALSE) 1.5.3 ANOVA Neck diameter of Chimú vessels # anova = neck diameter ~ group gp.nd &lt;- lm.rrpp(nd ~ gp, SS.type = &quot;I&quot;, data = data, iter = 9999, print.progress = FALSE) anova(gp.nd) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## gp 1 0.315 0.31485 0.00784 0.3002 -0.1968 0.5862 ## Residuals 38 39.860 1.04895 0.99216 ## Total 39 40.175 ## ## Call: lm.rrpp(f1 = nd ~ gp, iter = 9999, SS.type = &quot;I&quot;, data = data, print.progress = FALSE) 1.5.4 ANOVA Belly diameter of Chimú vessels # anova = belly diameter ~ group gp.bl &lt;- lm.rrpp(bl ~ gp, SS.type = &quot;I&quot;, data = data, iter = 9999, print.progress = FALSE) anova(gp.bl) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## gp 1 66.64 66.638 0.1406 6.2167 1.9955 0.0138 * ## Residuals 38 407.33 10.719 0.8594 ## Total 39 473.97 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: lm.rrpp(f1 = bl ~ gp, iter = 9999, SS.type = &quot;I&quot;, data = data, print.progress = FALSE) 1.5.5 ANOVA Height of Chimú vessels # anova = height ~ group gp.h &lt;- lm.rrpp(h ~ gp, SS.type = &quot;I&quot;, data = data, iter = 9999, print.progress = FALSE) anova(gp.h) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## gp 1 3.44 3.4391 0.00618 0.2361 -0.32432 0.6322 ## Residuals 38 553.45 14.5644 0.99382 ## Total 39 556.89 ## ## Call: lm.rrpp(f1 = h ~ gp, iter = 9999, SS.type = &quot;I&quot;, data = data, print.progress = FALSE) "],["geometric-morphometrics.html", "Chapter 2 Geometric morphometrics 2.1 Load packages + data 2.2 Generalised Procrustes Analysis 2.3 Principal Components Analysis 2.4 Define models 2.5 Mean Shapes", " Chapter 2 Geometric morphometrics 2.1 Load packages + data # load packages #devtools::install_github(&quot;mlcollyer/RRPP&quot;) #devtools::install_github(&quot;geomorphR/geomorph&quot;, ref = &quot;Stable&quot;, build_vignettes = TRUE) library(here) library(geomorph) library(tidyverse) library(wesanderson) # read GM data source(&#39;readmulti.csv.R&#39;) setwd(&quot;./data&quot;) filelist &lt;- list.files(pattern = &quot;.csv&quot;) coords &lt;- readmulti.csv(filelist) setwd(&quot;../&quot;) # read qualitative data qdata &lt;- read.csv(&quot;qdata.csv&quot;, header = TRUE, row.names = 1) qdata &lt;- qdata[match(dimnames(coords)[[3]], rownames(qdata)),] 2.2 Generalised Procrustes Analysis Landmark data were aligned to a global coordinate system (Kendall 1981, 1984; Slice 2001), achieved through generalised Procrustes superimposition (Rohlf and Slice 1990) performed in R 4.0.3 (R Core Development Team, 2020) using the geomorph library v. 3.3.2 (Adams et al. 2017; Adams and Otárola-Castillo 2013). Procrustes superimposition translates, scales, and rotates the coordinate data to allow for comparisons among objects (Gower 1975; Rohlf and Slice 1990). The geomorph package uses a partial Procrustes superimposition that projects the aligned specimens into tangent space subsequent to alignment in preparation for the use of multivariate methods that assume linear space (Rohlf 1999; Slice 2001). # gpa Y.gpa &lt;- gpagen(coords, PrinAxes = TRUE, ProcD = TRUE, Proj = TRUE, print.progress = FALSE) # geomorph data frame gdf &lt;- geomorph.data.frame(shape = Y.gpa$coords, size = Y.gpa$Csize, type = qdata$type) # render 3d gpa plot plot(Y.gpa) # gpa plot #knitr::include_graphics(&#39;images/gpa3d.png&#39;) # add centroid size to qdata qdata$csz &lt;- Y.gpa$Csize # print updated qdata with centroid size knitr::kable(qdata, align = &quot;lccccc&quot;, caption = &quot;Modified attributes included in qdata.&quot;) Table 2.1: Modified attributes included in qdata. group type csz 1608101 phytomorph bottle 480.3691 1608102 phytomorph bottle 642.7924 1608111 anthropomorph jar 585.9878 1608121 phytomorph jar 673.7326 1608122 zoomorph bottle 578.2339 1608124 zoomorph bottle 543.0810 1608125 zoomorph bottle 538.4608 1608126 zoomorph jar 613.1277 1608129 zoomorph jar 511.8743 1608131 zoomorph jar 681.0963 1608140 zoomorph bottle 558.2951 1608141 anthropomorph bottle 511.1698 1608163 zoomorph jar 432.3418 160836 phytomorph bottle 509.1797 160839 zoomorph jar 416.4591 160844 anthropomorph jar 607.4952 160846 zoomorph bottle 545.1291 160847 anthropomorph bottle 416.4516 160848 anthropomorph jar 468.6945 160849 anthropomorph bottle 453.0625 160850 anthropomorph bottle 751.5635 160852 zoomorph bottle 512.1550 160852x anthropomorph jar 596.2446 160859 zoomorph bottle 512.3332 160860 anthropomorph jar 449.6768 160868 zoomorph bottle 674.0455 160873 anthropomorph jar 590.1911 160874 zoomorph jar 574.2754 160875 anthropomorph bottle 687.1416 160876 anthropomorph bottle 591.4190 160881 anthropomorph jar 416.0126 160882 zoomorph bottle 544.4697 160884 zoomorph jar 418.5339 160886 zoomorph bottle 441.5053 160888 anthropomorph bottle 379.4152 160892 anthropomorph jar 384.3096 205854 anthropomorph bottle 407.5996 206614 zoomorph jar 458.8122 238944 phytomorph bottle 701.0724 PEX35 zoomorph bottle 635.8740 2.2.1 Boxplot # attributes for boxplot csz &lt;- qdata$csz group &lt;- qdata$group type &lt;- qdata$type # boxplot of vessel centroid size by type csz.type &lt;- ggplot(qdata, aes(x = type, y = csz, color = type)) + geom_boxplot(notch = FALSE) + geom_dotplot(binaxis = &#39;y&#39;, stackdir = &#39;center&#39;, dotsize = 0.3) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + theme(legend.position = &quot;none&quot;) + labs(x = &#39;Group&#39;, y = &#39;Centroid Size&#39;) # render plot csz.type ## Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`. Figure 2.1: Boxplot of centroid size by spatial/temporal unit. 2.3 Principal Components Analysis Principal components analysis (Jolliffe 2002) was used to visualise shape variation among the bottles. The shape changes described by each principal axis are commonly visualised using thin-plate spline warping of a reference 3D mesh (Klingenberg 2013; Sherratt et al. 2014). # principal components analysis pca&lt;-gm.prcomp(Y.gpa$coords) summary(pca) ## ## Ordination type: Principal Component Analysis ## Centering by OLS mean ## Orthogonal projection of OLS residuals ## Number of observations: 40 ## Number of vectors 39 ## ## Importance of Components: ## Comp1 Comp2 Comp3 Comp4 Comp5 Comp6 Comp7 ## Eigenvalues 0.004578891 0.003667324 0.001382186 0.0008285785 0.0003034515 0.0002208111 0.0001798765 ## Proportion of Variance 0.397734584 0.318553454 0.120060362 0.0719725303 0.0263586061 0.0191802410 0.0156245463 ## Cumulative Proportion 0.397734584 0.716288038 0.836348399 0.9083209295 0.9346795356 0.9538597766 0.9694843229 ## Comp8 Comp9 Comp10 Comp11 Comp12 Comp13 ## Eigenvalues 7.902524e-05 6.182937e-05 4.576889e-05 3.548781e-05 2.855247e-05 1.962854e-05 ## Proportion of Variance 6.864342e-03 5.370663e-03 3.975608e-03 3.082565e-03 2.480143e-03 1.704987e-03 ## Cumulative Proportion 9.763487e-01 9.817193e-01 9.856949e-01 9.887775e-01 9.912576e-01 9.929626e-01 ## Comp14 Comp15 Comp16 Comp17 Comp18 Comp19 ## Eigenvalues 1.805515e-05 1.289413e-05 9.274920e-06 8.294393e-06 5.673848e-06 4.698213e-06 ## Proportion of Variance 1.568318e-03 1.120019e-03 8.056441e-04 7.204729e-04 4.928455e-04 4.080992e-04 ## Cumulative Proportion 9.945309e-01 9.956510e-01 9.964566e-01 9.971771e-01 9.976699e-01 9.980780e-01 ## Comp20 Comp21 Comp22 Comp23 Comp24 Comp25 ## Eigenvalues 4.479094e-06 3.246003e-06 2.458537e-06 2.219666e-06 1.810992e-06 1.397678e-06 ## Proportion of Variance 3.890660e-04 2.819564e-04 2.135551e-04 1.928060e-04 1.573075e-04 1.214060e-04 ## Cumulative Proportion 9.984671e-01 9.987491e-01 9.989626e-01 9.991554e-01 9.993127e-01 9.994341e-01 ## Comp26 Comp27 Comp28 Comp29 Comp30 Comp31 ## Eigenvalues 1.173496e-06 1.076508e-06 8.259197e-07 7.415893e-07 5.656128e-07 5.264698e-07 ## Proportion of Variance 1.019329e-04 9.350835e-05 7.174157e-05 6.441641e-05 4.913063e-05 4.573057e-05 ## Cumulative Proportion 9.995361e-01 9.996296e-01 9.997013e-01 9.997657e-01 9.998149e-01 9.998606e-01 ## Comp32 Comp33 Comp34 Comp35 Comp36 Comp37 ## Eigenvalues 3.987210e-07 3.448263e-07 2.895934e-07 1.986698e-07 1.756869e-07 1.286197e-07 ## Proportion of Variance 3.463396e-05 2.995253e-05 2.515485e-05 1.725699e-05 1.526063e-05 1.117225e-05 ## Cumulative Proportion 9.998952e-01 9.999252e-01 9.999503e-01 9.999676e-01 9.999828e-01 9.999940e-01 ## Comp38 Comp39 ## Eigenvalues 6.622706e-08 2.627348e-09 ## Proportion of Variance 5.752658e-06 2.282184e-07 ## Cumulative Proportion 9.999998e-01 1.000000e+00 # set plot parameters (types) pch.gps.type &lt;- c(15,17)[as.factor(type)] col.gps.type &lt;- wes_palette(&quot;Moonrise2&quot;)[as.factor(type)] col.hull.type &lt;- c(&quot;#798E87&quot;,&quot;#C27D38&quot;) # plot pca by comb pc.plot.type &lt;- plot(pca, asp = 1, pch = pch.gps.type, col = col.gps.type) shapeHulls(pc.plot.type, groups = type, group.cols = col.hull.type) # pca warp #knitr::include_graphics(&#39;images/pca-warp.jpg&#39;) 2.4 Define models A residual randomisation permutation procedure (RRPP; n = 10,000 permutations) was used for all Procrustes ANOVAs (Adams and Collyer 2015; Michael L. Collyer and Adams 2018), which has higher statistical power and a greater ability to identify patterns in the data should they be present (Anderson and Ter Braak 2003). To assess whether shape changes differ by group (geography and time), Procrustes ANOVAs (Goodall 1991) were also run that enlist effect-sizes (zscores) computed as standard deviates of the generated sampling distributions (M. L. Collyer, Sekora, and Adams 2015). 2.4.1 Vessel size and shape # size as a function of vessel form? fit.size.type &lt;- procD.lm(size ~ type, data = gdf, print.progress = FALSE, iter = 9999) # Procrustes ANOVA: do sizes differ as a function of vessel form? anova(fit.size.type) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## type 1 6702 6701.9 0.01785 0.6905 0.27096 0.4091 ## Residuals 38 368826 9705.9 0.98215 ## Total 39 375527 ## ## Call: procD.lm(f1 = size ~ type, iter = 9999, data = gdf, print.progress = FALSE) # shape as a function of vessel form? fit.shape.type &lt;- procD.lm(shape ~ type, data = gdf, print.progress = FALSE, iter = 9999) # Procrustes ANOVA: do shapes differ as a functiuon of vessel form? anova(fit.shape.type) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## type 1 0.04373 0.043733 0.0974 4.1008 2.5364 0.0035 ** ## Residuals 38 0.40525 0.010665 0.9026 ## Total 39 0.44898 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: procD.lm(f1 = shape ~ type, iter = 9999, data = gdf, print.progress = FALSE) 2.5 Mean Shapes # subset landmark coordinates to produce mean shapes new.coords&lt;-coords.subset(A = Y.gpa$coords, group = qdata$type) names(new.coords) ## [1] &quot;bottle&quot; &quot;jar&quot; # group shape means mean &lt;- lapply(new.coords, mshape) # plot mean shapes (type) plot(mean$bottle) plot(mean$jar) # comparison plots plotRefToTarget(mean$bottle, mean$jar, method = c(&quot;points&quot;), mag = 1) knitr::include_graphics(&#39;images/mshape.png&#39;) References "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
